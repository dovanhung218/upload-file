{"ast":null,"code":"//\n// officegen: document's plugins interface to implement additional features outside of the big mess of gen*.js\n//\n// Please refer to README.md for this module's documentations.\n//\n// Copyright (c) 2013 Ziv Barber;\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n//\n\n/**\n * Clear all the information of the current document.\n *\n * @param {object} docpluginman The plugin manager object.\n * @return Callback function to clear all the document's specific data.\n */\nfunction clearDocData(docpluginman) {\n  return function () {\n    // Clear all the specific document data:\n    docpluginman.genPrivate.type[docpluginman.docType] = {};\n\n    // Set back the default values:\n    if (typeof docpluginman.defValuesFunc === 'function') {\n      docpluginman.defValuesFunc(docpluginman);\n    } // Endif.\n\n    // Allow all the plugins to set their default data after clearing the document's data:\n    docpluginman.emitEvent('setData', docpluginman.genobj);\n  };\n}\n\n/**\n * This function implementing the document plugins system so instead of implementing\n * everything inside a big mess document generator, you can implement each feature\n * as a plugin. For each document generator that want to enable this plugin system\n * you must create an instance of this object.\n *\n * @param {object} genobj The document object to work on it.\n * @param {object} genPrivate Access to the internals of this object.\n * @param {string} docType Must be the same as the new_type parameter to the document generator's constructor.\n * @param {function} defValuesFunc The function to use to reset the document's data.\n * @summary Implementation of the pptx document plugins system so it'll be easier to add new features.\n * @constructor\n * @name MakeDocPluginapi\n */\nfunction MakeDocPluginapi(genobj, genPrivate, docType, defValuesFunc) {\n  // Save everything because we'll need it later:\n  this.docType = docType;\n  this.genPrivate = genPrivate;\n  this.ogPluginsApi = genPrivate.plugs;\n  this.genobj = genobj;\n  this.defValuesFunc = defValuesFunc;\n  this.callbacksList = {};\n  this.plugsList = [];\n\n  // Here we can put anything specific to this document type BUT it's not data so if we'll clear the data inside the document we'll not need to clear anything here:\n  this.genPrivate.features.type[this.docType] = this;\n\n  // Prepare the object that we'll use to store data specific to this document type:\n  this.genPrivate.type[this.docType] = {};\n  if (typeof this.defValuesFunc === 'function') {\n    // Put the default data:\n    this.defValuesFunc(this);\n  } // Endif.\n\n  // Catch the clear document data event and connect it to us:\n  genobj.on('clearDocType', clearDocData(this));\n  return this;\n}\n\n/**\n * Check for verbose mode for this document type.\n * @param {string} moduleName Optional, Allow filtering by feature / module.\n */\nMakeDocPluginapi.prototype.getVerboseMode = function (moduleName) {\n  return this.ogPluginsApi.getVerboseMode(this.docType, moduleName);\n};\n\n/**\n * Allow displaying a verbose messages to the console.\n * @param {string} message The message to display.\n */\nMakeDocPluginapi.prototype.logIfVerbose = function (message) {\n  if (this.getVerboseMode()) {\n    console.log(message);\n  } // Endif.\n};\n\n/**\n * Get the object to install features related to this document type.\n * @return The features object.\n */\nMakeDocPluginapi.prototype.getFeaturesStorage = function () {\n  return this.genPrivate.features.type[this.docType];\n};\n\n/**\n * Get the object to place data used by this document.\n * @return The document's data object.\n */\nMakeDocPluginapi.prototype.getDataStorage = function () {\n  return this.genPrivate.type[this.docType];\n};\n\n/**\n * Register a new callback.\n * @param{string} eventType Type of event to catch.\n * @param{function} cbFunc Callback function.\n */\nMakeDocPluginapi.prototype.registerCallback = function (eventType, cbFunc) {\n  // First make sure that we have a list of callbacks for this event type:\n  if (!this.callbacksList[eventType]) {\n    this.callbacksList[eventType] = [];\n  } // Endif.\n\n  // Now we'll just push this callback:\n  this.callbacksList[eventType].push(cbFunc);\n};\n\n/**\n * Emit an event.\n * @param{string} eventType Type of event to emit.\n * @param{*} eventData Additional optional data.\n */\nMakeDocPluginapi.prototype.emitEvent = function (eventType, eventData) {\n  var funcThis = this;\n\n  // We'll do something only if we have this type of event:\n  if (this.callbacksList[eventType]) {\n    this.callbacksList[eventType].forEach(function (value) {\n      if (typeof value === 'function') {\n        value(eventData, eventType, funcThis);\n      } // Endif.\n    });\n  } // Endif.\n};\n\nmodule.exports = MakeDocPluginapi;","map":{"version":3,"names":["clearDocData","docpluginman","genPrivate","type","docType","defValuesFunc","emitEvent","genobj","MakeDocPluginapi","ogPluginsApi","plugs","callbacksList","plugsList","features","on","prototype","getVerboseMode","moduleName","logIfVerbose","message","console","log","getFeaturesStorage","getDataStorage","registerCallback","eventType","cbFunc","push","eventData","funcThis","forEach","value","module","exports"],"sources":["/Users/abc/Downloads/Workspace/c2i/image-text/c2i-convert/node_modules/officegen/lib/docplug.js"],"sourcesContent":["//\n// officegen: document's plugins interface to implement additional features outside of the big mess of gen*.js\n//\n// Please refer to README.md for this module's documentations.\n//\n// Copyright (c) 2013 Ziv Barber;\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n//\n\n/**\n * Clear all the information of the current document.\n *\n * @param {object} docpluginman The plugin manager object.\n * @return Callback function to clear all the document's specific data.\n */\nfunction clearDocData(docpluginman) {\n  return function() {\n    // Clear all the specific document data:\n    docpluginman.genPrivate.type[docpluginman.docType] = {}\n\n    // Set back the default values:\n    if (typeof docpluginman.defValuesFunc === 'function') {\n      docpluginman.defValuesFunc(docpluginman)\n    } // Endif.\n\n    // Allow all the plugins to set their default data after clearing the document's data:\n    docpluginman.emitEvent('setData', docpluginman.genobj)\n  }\n}\n\n/**\n * This function implementing the document plugins system so instead of implementing\n * everything inside a big mess document generator, you can implement each feature\n * as a plugin. For each document generator that want to enable this plugin system\n * you must create an instance of this object.\n *\n * @param {object} genobj The document object to work on it.\n * @param {object} genPrivate Access to the internals of this object.\n * @param {string} docType Must be the same as the new_type parameter to the document generator's constructor.\n * @param {function} defValuesFunc The function to use to reset the document's data.\n * @summary Implementation of the pptx document plugins system so it'll be easier to add new features.\n * @constructor\n * @name MakeDocPluginapi\n */\nfunction MakeDocPluginapi(genobj, genPrivate, docType, defValuesFunc) {\n  // Save everything because we'll need it later:\n  this.docType = docType\n  this.genPrivate = genPrivate\n  this.ogPluginsApi = genPrivate.plugs\n  this.genobj = genobj\n  this.defValuesFunc = defValuesFunc\n  this.callbacksList = {}\n  this.plugsList = []\n\n  // Here we can put anything specific to this document type BUT it's not data so if we'll clear the data inside the document we'll not need to clear anything here:\n  this.genPrivate.features.type[this.docType] = this\n\n  // Prepare the object that we'll use to store data specific to this document type:\n  this.genPrivate.type[this.docType] = {}\n  if (typeof this.defValuesFunc === 'function') {\n    // Put the default data:\n    this.defValuesFunc(this)\n  } // Endif.\n\n  // Catch the clear document data event and connect it to us:\n  genobj.on('clearDocType', clearDocData(this))\n  return this\n}\n\n/**\n * Check for verbose mode for this document type.\n * @param {string} moduleName Optional, Allow filtering by feature / module.\n */\nMakeDocPluginapi.prototype.getVerboseMode = function(moduleName) {\n  return this.ogPluginsApi.getVerboseMode(this.docType, moduleName)\n}\n\n/**\n * Allow displaying a verbose messages to the console.\n * @param {string} message The message to display.\n */\nMakeDocPluginapi.prototype.logIfVerbose = function(message) {\n  if (this.getVerboseMode()) {\n    console.log(message)\n  } // Endif.\n}\n\n/**\n * Get the object to install features related to this document type.\n * @return The features object.\n */\nMakeDocPluginapi.prototype.getFeaturesStorage = function() {\n  return this.genPrivate.features.type[this.docType]\n}\n\n/**\n * Get the object to place data used by this document.\n * @return The document's data object.\n */\nMakeDocPluginapi.prototype.getDataStorage = function() {\n  return this.genPrivate.type[this.docType]\n}\n\n/**\n * Register a new callback.\n * @param{string} eventType Type of event to catch.\n * @param{function} cbFunc Callback function.\n */\nMakeDocPluginapi.prototype.registerCallback = function(eventType, cbFunc) {\n  // First make sure that we have a list of callbacks for this event type:\n  if (!this.callbacksList[eventType]) {\n    this.callbacksList[eventType] = []\n  } // Endif.\n\n  // Now we'll just push this callback:\n  this.callbacksList[eventType].push(cbFunc)\n}\n\n/**\n * Emit an event.\n * @param{string} eventType Type of event to emit.\n * @param{*} eventData Additional optional data.\n */\nMakeDocPluginapi.prototype.emitEvent = function(eventType, eventData) {\n  var funcThis = this\n\n  // We'll do something only if we have this type of event:\n  if (this.callbacksList[eventType]) {\n    this.callbacksList[eventType].forEach(function(value) {\n      if (typeof value === 'function') {\n        value(eventData, eventType, funcThis)\n      } // Endif.\n    })\n  } // Endif.\n}\n\nmodule.exports = MakeDocPluginapi\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}