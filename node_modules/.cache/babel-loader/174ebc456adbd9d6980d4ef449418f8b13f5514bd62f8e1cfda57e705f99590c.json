{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Downloads/Workspace/c2i/image-text/c2i-convert/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState, useEffect, Children } from \"react\";\nimport { createWorker } from \"tesseract.js\";\nimport { saveAs } from \"file-saver\";\nimport { AlignmentType, Document, HeadingLevel, Packer, Paragraph, TabStopPosition, TabStopType, TextRun } from \"docx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ocr, setOcr] = useState(\"\");\n  const [imageData, setImageData] = useState(null);\n  const worker = createWorker({\n    logger: m => {\n      console.log(m);\n    }\n  });\n  const convertImageToText = async () => {\n    if (!imageData) return;\n    await worker.load();\n    await worker.loadLanguage(\"eng\");\n    await worker.initialize(\"eng\");\n    const {\n      data: {\n        text\n      }\n    } = await worker.recognize(imageData);\n    setOcr(text);\n  };\n  useEffect(() => {\n    convertImageToText();\n  }, [imageData]);\n  function handleImageChange(e) {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      const imageDataUri = reader.result;\n      console.log({\n        imageDataUri\n      });\n      setImageData(imageDataUri);\n    };\n    reader.readAsDataURL(file);\n  }\n  // const SampleDocument = () => (\n  //   <Document>\n  //     <Text>Hello World</Text>\n  //   </Document>\n  // )\n  const createDocument = () => {\n    const doc = new Document({\n      creator: \"Clippy\",\n      title: \"Sample Document\",\n      description: \"A brief example of using docx\",\n      styles: {\n        default: {\n          listParagraph: {\n            run: {\n              color: \"#FF0000\"\n            }\n          }\n        },\n        paragraphStyles: [{\n          id: \"aside\",\n          name: \"Aside\",\n          basedOn: \"Normal\",\n          next: \"Normal\",\n          run: {\n            color: \"999999\",\n            italics: true\n          },\n          paragraph: {\n            spacing: {\n              line: 276\n            }\n          }\n        }, {\n          id: \"wellSpaced\",\n          name: \"Well Spaced\",\n          basedOn: \"Normal\",\n          quickFormat: true,\n          paragraph: {\n            spacing: {\n              line: 276,\n              before: 20 * 72 * 0.1,\n              after: 20 * 72 * 0.05\n            }\n          }\n        }, {\n          id: \"strikeUnderline\",\n          name: \"Strike Underline\",\n          basedOn: \"Normal\",\n          quickFormat: true,\n          run: {\n            strike: true\n          }\n        }],\n        characterStyles: [{\n          id: \"strikeUnderlineCharacter\",\n          name: \"Strike Underline\",\n          basedOn: \"Normal\",\n          quickFormat: true,\n          run: {\n            strike: true\n          }\n        }]\n      },\n      numbering: {\n        config: [{\n          reference: \"my-crazy-numbering\",\n          levels: [{\n            level: 0,\n            text: \"%1)\",\n            alignment: AlignmentType.LEFT\n          }]\n        }]\n      },\n      sections: [{\n        children: [new Paragraph({\n          text: \"Test heading1, bold and italicized\",\n          heading: HeadingLevel.HEADING_1\n        }), new Paragraph(\"Some simple content\"), new Paragraph({\n          text: \"Test heading2 with double red underline\",\n          heading: HeadingLevel.HEADING_2\n        }), new Paragraph({\n          text: \"Option1\",\n          numbering: {\n            reference: \"my-crazy-numbering\",\n            level: 0\n          },\n          style: \"aside\"\n        }), new Paragraph({\n          text: \"Option5 -- override 2 to 5\",\n          numbering: {\n            reference: \"my-crazy-numbering\",\n            level: 0\n          }\n        }), new Paragraph({\n          text: \"Option3\",\n          numbering: {\n            reference: \"my-crazy-numbering\",\n            level: 0\n          }\n        }), new Paragraph({\n          children: [new TextRun({\n            text: \"Some monospaced content\",\n            font: {\n              name: \"Monospace\"\n            }\n          })]\n        }), new Paragraph({\n          text: \"An aside, in light gray italics and indented\",\n          style: \"aside\"\n        }), new Paragraph({\n          text: \"This is normal, but well-spaced text\",\n          style: \"wellSpaced\"\n        }), new Paragraph({\n          children: [new TextRun({\n            text: \"This is a bold run,\",\n            bold: true\n          }), new TextRun(\" switching to normal \"), new TextRun({\n            text: \"and then underlined \",\n            underline: {}\n          }), new TextRun({\n            text: \"and then emphasis-mark \",\n            emphasisMark: {}\n          }), new TextRun({\n            text: \"and back to normal.\"\n          }), new TextRun({\n            text: \"This text will be invisible!\",\n            vanish: true\n          }), new TextRun({\n            text: \"This text will be VERY invisible! Word processors cannot override this!\",\n            specVanish: true\n          })]\n        }), new Paragraph({\n          style: \"Strong\",\n          children: [new TextRun({\n            text: \"Strong Style\"\n          }), new TextRun({\n            text: \" - Very strong.\"\n          })]\n        }), new Paragraph({\n          style: \"strikeUnderline\",\n          children: [new TextRun({\n            text: \"Underline and Strike\"\n          })]\n        }), new Paragraph({\n          children: [new TextRun({\n            text: \"Hello World \"\n          }), new TextRun({\n            style: \"strikeUnderlineCharacter\",\n            text: \"Underline and Strike\"\n          }), new TextRun({\n            text: \" Another Hello World\"\n          }), new TextRun({\n            scale: 50,\n            text: \" Scaled text\"\n          })]\n        }), new Paragraph({\n          scale: 200,\n          children: [new TextRun({\n            text: \"Scaled paragraph\"\n          })]\n        })]\n      }]\n    });\n    return doc;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Choose an Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"\",\n        id: \"\",\n        onChange: handleImageChange,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageData,\n        alt: \"\",\n        srcset: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: ocr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          const doc = createDocument();\n          Packer.toBlob(doc).then(blob => {\n            console.log(blob);\n            saveAs(blob, \"example.docx\");\n            console.log(\"Document created successfully\");\n          });\n        },\n        children: \"generate doc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 277,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XS/7OkSjeSWNT8LMHJaUSiiuRfk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","useEffect","Children","createWorker","saveAs","AlignmentType","Document","HeadingLevel","Packer","Paragraph","TabStopPosition","TabStopType","TextRun","App","ocr","setOcr","imageData","setImageData","worker","logger","m","console","log","convertImageToText","load","loadLanguage","initialize","data","text","recognize","handleImageChange","e","file","target","files","reader","FileReader","onloadend","imageDataUri","result","readAsDataURL","createDocument","doc","creator","title","description","styles","default","listParagraph","run","color","paragraphStyles","id","name","basedOn","next","italics","paragraph","spacing","line","quickFormat","before","after","strike","characterStyles","numbering","config","reference","levels","level","alignment","LEFT","sections","children","heading","HEADING_1","HEADING_2","style","font","bold","underline","emphasisMark","vanish","specVanish","scale","toBlob","then","blob"],"sources":["/Users/abc/Downloads/Workspace/c2i/image-text/c2i-convert/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState, useEffect, Children } from \"react\";\nimport { createWorker } from \"tesseract.js\";\nimport { saveAs } from \"file-saver\";\nimport {\n  AlignmentType,\n  Document,\n  HeadingLevel,\n  Packer,\n  Paragraph,\n  TabStopPosition,\n  TabStopType,\n  TextRun,\n} from \"docx\";\nfunction App() {\n  const [ocr, setOcr] = useState(\"\");\n  const [imageData, setImageData] = useState(null);\n  const worker = createWorker({\n    logger: (m) => {\n      console.log(m);\n    },\n  });\n  const convertImageToText = async () => {\n    if (!imageData) return;\n    await worker.load();\n    await worker.loadLanguage(\"eng\");\n    await worker.initialize(\"eng\");\n    const {\n      data: { text },\n    } = await worker.recognize(imageData);\n    setOcr(text);\n  };\n  useEffect(() => {\n    convertImageToText();\n  }, [imageData]);\n\n  function handleImageChange(e) {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      const imageDataUri = reader.result;\n      console.log({ imageDataUri });\n      setImageData(imageDataUri);\n    };\n    reader.readAsDataURL(file);\n  }\n  // const SampleDocument = () => (\n  //   <Document>\n  //     <Text>Hello World</Text>\n  //   </Document>\n  // )\n  const createDocument = () => {\n    const doc = new Document({\n      creator: \"Clippy\",\n      title: \"Sample Document\",\n      description: \"A brief example of using docx\",\n      styles: {\n          default: {\n              listParagraph: {\n                  run: {\n                      color: \"#FF0000\",\n                  },\n              },\n          },\n          paragraphStyles: [\n              {\n                  id: \"aside\",\n                  name: \"Aside\",\n                  basedOn: \"Normal\",\n                  next: \"Normal\",\n                  run: {\n                      color: \"999999\",\n                      italics: true,\n                  },\n                  paragraph: {\n                     \n                      spacing: {\n                          line: 276,\n                      },\n                  },\n              },\n              {\n                  id: \"wellSpaced\",\n                  name: \"Well Spaced\",\n                  basedOn: \"Normal\",\n                  quickFormat: true,\n                  paragraph: {\n                      spacing: { line: 276, before: 20 * 72 * 0.1, after: 20 * 72 * 0.05 },\n                  },\n              },\n              {\n                  id: \"strikeUnderline\",\n                  name: \"Strike Underline\",\n                  basedOn: \"Normal\",\n                  quickFormat: true,\n                  run: {\n                      strike: true,\n                     \n                  },\n              },\n          ],\n          characterStyles: [\n              {\n                  id: \"strikeUnderlineCharacter\",\n                  name: \"Strike Underline\",\n                  basedOn: \"Normal\",\n                  quickFormat: true,\n                  run: {\n                      strike: true,\n                      \n                  },\n              },\n          ],\n      },\n      numbering: {\n          config: [\n              {\n                  reference: \"my-crazy-numbering\",\n                  levels: [\n                      {\n                          level: 0,\n                          text: \"%1)\",\n                          alignment: AlignmentType.LEFT,\n                      },\n                  ],\n              },\n          ],\n      },\n      sections: [\n          {\n              children: [\n                  new Paragraph({\n                      text: \"Test heading1, bold and italicized\",\n                      heading: HeadingLevel.HEADING_1,\n                  }),\n                  new Paragraph(\"Some simple content\"),\n                  new Paragraph({\n                      text: \"Test heading2 with double red underline\",\n                      heading: HeadingLevel.HEADING_2,\n                  }),\n                  new Paragraph({\n                      text: \"Option1\",\n                      numbering: {\n                          reference: \"my-crazy-numbering\",\n                          level: 0,\n                      },\n                      style: \"aside\",\n                  }),\n                  new Paragraph({\n                      text: \"Option5 -- override 2 to 5\",\n                      numbering: {\n                          reference: \"my-crazy-numbering\",\n                          level: 0,\n                      },\n                  }),\n                  new Paragraph({\n                      text: \"Option3\",\n                      numbering: {\n                          reference: \"my-crazy-numbering\",\n                          level: 0,\n                      },\n                  }),\n                  new Paragraph({\n                      children: [\n                          new TextRun({\n                              text: \"Some monospaced content\",\n                              font: {\n                                  name: \"Monospace\",\n                              },\n                          }),\n                      ],\n                  }),\n                  new Paragraph({\n                      text: \"An aside, in light gray italics and indented\",\n                      style: \"aside\",\n                  }),\n                  new Paragraph({\n                      text: \"This is normal, but well-spaced text\",\n                      style: \"wellSpaced\",\n                  }),\n                  new Paragraph({\n                      children: [\n                          new TextRun({\n                              text: \"This is a bold run,\",\n                              bold: true,\n                          }),\n                          new TextRun(\" switching to normal \"),\n                          new TextRun({\n                              text: \"and then underlined \",\n                              underline: {},\n                          }),\n                          new TextRun({\n                              text: \"and then emphasis-mark \",\n                              emphasisMark: {},\n                          }),\n                          new TextRun({\n                              text: \"and back to normal.\",\n                          }),\n                          new TextRun({\n                              text: \"This text will be invisible!\",\n                              vanish: true,\n                          }),\n                          new TextRun({\n                              text: \"This text will be VERY invisible! Word processors cannot override this!\",\n                              specVanish: true,\n                          }),\n                      ],\n                  }),\n                  new Paragraph({\n                      style: \"Strong\",\n                      children: [\n                          new TextRun({\n                              text: \"Strong Style\",\n                          }),\n                          new TextRun({\n                              text: \" - Very strong.\",\n                          }),\n                      ],\n                  }),\n                  new Paragraph({\n                      style: \"strikeUnderline\",\n                      children: [\n                          new TextRun({\n                              text: \"Underline and Strike\",\n                          }),\n                      ],\n                  }),\n                  new Paragraph({\n                      children: [\n                          new TextRun({\n                              text: \"Hello World \",\n                          }),\n                          new TextRun({\n                              style: \"strikeUnderlineCharacter\",\n                              text: \"Underline and Strike\",\n                          }),\n                          new TextRun({\n                              text: \" Another Hello World\",\n                          }),\n                          new TextRun({\n                              scale: 50,\n                              text: \" Scaled text\",\n                          }),\n                      ],\n                  }),\n                  new Paragraph({\n                      scale: 200,\n                      children: [\n                          new TextRun({\n                              text: \"Scaled paragraph\",\n                          }),\n                      ],\n                  }),\n              ],\n          },\n      ],\n  });\n    return doc;\n  };\n  return (\n    <div className=\"App\">\n      <div>\n        <p>Choose an Image</p>\n        <input\n          type=\"file\"\n          name=\"\"\n          id=\"\"\n          onChange={handleImageChange}\n          accept=\"image/*\"\n        />\n      </div>\n      <div className=\"display-flex\">\n        <img src={imageData} alt=\"\" srcset=\"\" />\n        <p>{ocr}</p>\n        <button\n          onClick={() => {\n            const doc = createDocument();\n\n            Packer.toBlob(doc).then((blob) => {\n              console.log(blob);\n              saveAs(blob, \"example.docx\");\n              console.log(\"Document created successfully\");\n            });\n          }}\n        >\n          generate doc\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}