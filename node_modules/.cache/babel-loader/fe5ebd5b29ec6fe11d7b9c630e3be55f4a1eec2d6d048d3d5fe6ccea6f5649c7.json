{"ast":null,"code":"/**\r\n * node-compress-commons\r\n *\r\n * Copyright (c) 2014 Chris Talkington, contributors.\r\n * Licensed under the MIT license.\r\n * https://github.com/archiverjs/node-compress-commons/blob/master/LICENSE-MIT\r\n */\nvar util = module.exports = {};\nutil.dateToDos = function (d, forceLocalTime) {\n  forceLocalTime = forceLocalTime || false;\n  var year = forceLocalTime ? d.getFullYear() : d.getUTCFullYear();\n  if (year < 1980) {\n    return 2162688; // 1980-1-1 00:00:00\n  } else if (year >= 2044) {\n    return 2141175677; // 2043-12-31 23:59:58\n  }\n\n  var val = {\n    year: year,\n    month: forceLocalTime ? d.getMonth() : d.getUTCMonth(),\n    date: forceLocalTime ? d.getDate() : d.getUTCDate(),\n    hours: forceLocalTime ? d.getHours() : d.getUTCHours(),\n    minutes: forceLocalTime ? d.getMinutes() : d.getUTCMinutes(),\n    seconds: forceLocalTime ? d.getSeconds() : d.getUTCSeconds()\n  };\n  return val.year - 1980 << 25 | val.month + 1 << 21 | val.date << 16 | val.hours << 11 | val.minutes << 5 | val.seconds / 2;\n};\nutil.dosToDate = function (dos) {\n  return new Date((dos >> 25 & 0x7f) + 1980, (dos >> 21 & 0x0f) - 1, dos >> 16 & 0x1f, dos >> 11 & 0x1f, dos >> 5 & 0x3f, (dos & 0x1f) << 1);\n};\nutil.fromDosTime = function (buf) {\n  return util.dosToDate(buf.readUInt32LE(0));\n};\nutil.getEightBytes = function (v) {\n  var buf = Buffer.alloc(8);\n  buf.writeUInt32LE(v % 0x0100000000, 0);\n  buf.writeUInt32LE(v / 0x0100000000 | 0, 4);\n  return buf;\n};\nutil.getShortBytes = function (v) {\n  var buf = Buffer.alloc(2);\n  buf.writeUInt16LE((v & 0xFFFF) >>> 0, 0);\n  return buf;\n};\nutil.getShortBytesValue = function (buf, offset) {\n  return buf.readUInt16LE(offset);\n};\nutil.getLongBytes = function (v) {\n  var buf = Buffer.alloc(4);\n  buf.writeUInt32LE((v & 0xFFFFFFFF) >>> 0, 0);\n  return buf;\n};\nutil.getLongBytesValue = function (buf, offset) {\n  return buf.readUInt32LE(offset);\n};\nutil.toDosTime = function (d) {\n  return util.getLongBytes(util.dateToDos(d));\n};","map":{"version":3,"names":["util","module","exports","dateToDos","d","forceLocalTime","year","getFullYear","getUTCFullYear","val","month","getMonth","getUTCMonth","date","getDate","getUTCDate","hours","getHours","getUTCHours","minutes","getMinutes","getUTCMinutes","seconds","getSeconds","getUTCSeconds","dosToDate","dos","Date","fromDosTime","buf","readUInt32LE","getEightBytes","v","Buffer","alloc","writeUInt32LE","getShortBytes","writeUInt16LE","getShortBytesValue","offset","readUInt16LE","getLongBytes","getLongBytesValue","toDosTime"],"sources":["/Users/abc/Downloads/Workspace/c2i/image-text/c2i-convert/node_modules/compress-commons/lib/archivers/zip/util.js"],"sourcesContent":["/**\r\n * node-compress-commons\r\n *\r\n * Copyright (c) 2014 Chris Talkington, contributors.\r\n * Licensed under the MIT license.\r\n * https://github.com/archiverjs/node-compress-commons/blob/master/LICENSE-MIT\r\n */\r\nvar util = module.exports = {};\r\n\r\nutil.dateToDos = function(d, forceLocalTime) {\r\n  forceLocalTime = forceLocalTime || false;\r\n\r\n  var year = forceLocalTime ? d.getFullYear() : d.getUTCFullYear();\r\n\r\n  if (year < 1980) {\r\n    return 2162688; // 1980-1-1 00:00:00\r\n  } else if (year >= 2044) {\r\n    return 2141175677; // 2043-12-31 23:59:58\r\n  }\r\n\r\n  var val = {\r\n    year: year,\r\n    month: forceLocalTime ? d.getMonth() : d.getUTCMonth(),\r\n    date: forceLocalTime ? d.getDate() : d.getUTCDate(),\r\n    hours: forceLocalTime ? d.getHours() : d.getUTCHours(),\r\n    minutes: forceLocalTime ? d.getMinutes() : d.getUTCMinutes(),\r\n    seconds: forceLocalTime ? d.getSeconds() : d.getUTCSeconds()\r\n  };\r\n\r\n  return ((val.year - 1980) << 25) | ((val.month + 1) << 21) | (val.date << 16) |\r\n    (val.hours << 11) | (val.minutes << 5) | (val.seconds / 2);\r\n};\r\n\r\nutil.dosToDate = function(dos) {\r\n  return new Date(((dos >> 25) & 0x7f) + 1980, ((dos >> 21) & 0x0f) - 1, (dos >> 16) & 0x1f, (dos >> 11) & 0x1f, (dos >> 5) & 0x3f, (dos & 0x1f) << 1);\r\n};\r\n\r\nutil.fromDosTime = function(buf) {\r\n  return util.dosToDate(buf.readUInt32LE(0));\r\n};\r\n\r\nutil.getEightBytes = function(v) {\r\n  var buf = Buffer.alloc(8);\r\n  buf.writeUInt32LE(v % 0x0100000000, 0);\r\n  buf.writeUInt32LE((v / 0x0100000000) | 0, 4);\r\n\r\n  return buf;\r\n};\r\n\r\nutil.getShortBytes = function(v) {\r\n  var buf = Buffer.alloc(2);\r\n  buf.writeUInt16LE((v & 0xFFFF) >>> 0, 0);\r\n\r\n  return buf;\r\n};\r\n\r\nutil.getShortBytesValue = function(buf, offset) {\r\n  return buf.readUInt16LE(offset);\r\n};\r\n\r\nutil.getLongBytes = function(v) {\r\n  var buf = Buffer.alloc(4);\r\n  buf.writeUInt32LE((v & 0xFFFFFFFF) >>> 0, 0);\r\n\r\n  return buf;\r\n};\r\n\r\nutil.getLongBytesValue = function(buf, offset) {\r\n  return buf.readUInt32LE(offset);\r\n};\r\n\r\nutil.toDosTime = function(d) {\r\n  return util.getLongBytes(util.dateToDos(d));\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}