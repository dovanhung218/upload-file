{"ast":null,"code":"/**\r\n * Archiver Core\r\n *\r\n * @ignore\r\n * @license [MIT]{@link https://github.com/archiverjs/node-archiver/blob/master/LICENSE}\r\n * @copyright (c) 2012-2014 Chris Talkington, contributors.\r\n */\n\nvar util = require('util');\nconst ERROR_CODES = {\n  'ABORTED': 'archive was aborted',\n  'DIRECTORYDIRPATHREQUIRED': 'diretory dirpath argument must be a non-empty string value',\n  'DIRECTORYFUNCTIONINVALIDDATA': 'invalid data returned by directory custom data function',\n  'ENTRYNAMEREQUIRED': 'entry name must be a non-empty string value',\n  'FILEFILEPATHREQUIRED': 'file filepath argument must be a non-empty string value',\n  'FINALIZING': 'archive already finalizing',\n  'QUEUECLOSED': 'queue closed',\n  'NOENDMETHOD': 'no suitable finalize/end method defined by module',\n  'DIRECTORYNOTSUPPORTED': 'support for directory entries not defined by module',\n  'FORMATSET': 'archive format already set',\n  'INPUTSTEAMBUFFERREQUIRED': 'input source must be valid Stream or Buffer instance',\n  'MODULESET': 'module already set',\n  'SYMLINKNOTSUPPORTED': 'support for symlink entries not defined by module',\n  'SYMLINKFILEPATHREQUIRED': 'symlink filepath argument must be a non-empty string value',\n  'SYMLINKTARGETREQUIRED': 'symlink target argument must be a non-empty string value',\n  'ENTRYNOTSUPPORTED': 'entry not supported'\n};\nfunction ArchiverError(code, data) {\n  Error.captureStackTrace(this, this.constructor);\n  //this.name = this.constructor.name;\n  this.message = ERROR_CODES[code] || code;\n  this.code = code;\n  this.data = data;\n}\nutil.inherits(ArchiverError, Error);\nexports = module.exports = ArchiverError;","map":{"version":3,"names":["util","require","ERROR_CODES","ArchiverError","code","data","Error","captureStackTrace","constructor","message","inherits","exports","module"],"sources":["/Users/abc/Downloads/Workspace/c2i/image-text/c2i-convert/node_modules/archiver/lib/error.js"],"sourcesContent":["/**\r\n * Archiver Core\r\n *\r\n * @ignore\r\n * @license [MIT]{@link https://github.com/archiverjs/node-archiver/blob/master/LICENSE}\r\n * @copyright (c) 2012-2014 Chris Talkington, contributors.\r\n */\r\n\r\nvar util = require('util');\r\n\r\nconst ERROR_CODES = {\r\n  'ABORTED': 'archive was aborted',\r\n  'DIRECTORYDIRPATHREQUIRED': 'diretory dirpath argument must be a non-empty string value',\r\n  'DIRECTORYFUNCTIONINVALIDDATA': 'invalid data returned by directory custom data function',\r\n  'ENTRYNAMEREQUIRED': 'entry name must be a non-empty string value',\r\n  'FILEFILEPATHREQUIRED': 'file filepath argument must be a non-empty string value',\r\n  'FINALIZING': 'archive already finalizing',\r\n  'QUEUECLOSED': 'queue closed',\r\n  'NOENDMETHOD': 'no suitable finalize/end method defined by module',\r\n  'DIRECTORYNOTSUPPORTED': 'support for directory entries not defined by module',\r\n  'FORMATSET': 'archive format already set',\r\n  'INPUTSTEAMBUFFERREQUIRED': 'input source must be valid Stream or Buffer instance',\r\n  'MODULESET': 'module already set',\r\n  'SYMLINKNOTSUPPORTED': 'support for symlink entries not defined by module',\r\n  'SYMLINKFILEPATHREQUIRED': 'symlink filepath argument must be a non-empty string value',\r\n  'SYMLINKTARGETREQUIRED': 'symlink target argument must be a non-empty string value',\r\n  'ENTRYNOTSUPPORTED': 'entry not supported'\r\n};\r\n\r\nfunction ArchiverError(code, data) {\r\n  Error.captureStackTrace(this, this.constructor);\r\n  //this.name = this.constructor.name;\r\n  this.message = ERROR_CODES[code] || code;\r\n  this.code = code;\r\n  this.data = data;\r\n}\r\n\r\nutil.inherits(ArchiverError, Error);\r\n\r\nexports = module.exports = ArchiverError;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAIA,IAAI,GAAGC,OAAO,CAAC,MAAM,CAAC;AAE1B,MAAMC,WAAW,GAAG;EAClB,SAAS,EAAE,qBAAqB;EAChC,0BAA0B,EAAE,4DAA4D;EACxF,8BAA8B,EAAE,yDAAyD;EACzF,mBAAmB,EAAE,6CAA6C;EAClE,sBAAsB,EAAE,yDAAyD;EACjF,YAAY,EAAE,4BAA4B;EAC1C,aAAa,EAAE,cAAc;EAC7B,aAAa,EAAE,mDAAmD;EAClE,uBAAuB,EAAE,qDAAqD;EAC9E,WAAW,EAAE,4BAA4B;EACzC,0BAA0B,EAAE,sDAAsD;EAClF,WAAW,EAAE,oBAAoB;EACjC,qBAAqB,EAAE,mDAAmD;EAC1E,yBAAyB,EAAE,4DAA4D;EACvF,uBAAuB,EAAE,0DAA0D;EACnF,mBAAmB,EAAE;AACvB,CAAC;AAED,SAASC,aAAa,CAACC,IAAI,EAAEC,IAAI,EAAE;EACjCC,KAAK,CAACC,iBAAiB,CAAC,IAAI,EAAE,IAAI,CAACC,WAAW,CAAC;EAC/C;EACA,IAAI,CAACC,OAAO,GAAGP,WAAW,CAACE,IAAI,CAAC,IAAIA,IAAI;EACxC,IAAI,CAACA,IAAI,GAAGA,IAAI;EAChB,IAAI,CAACC,IAAI,GAAGA,IAAI;AAClB;AAEAL,IAAI,CAACU,QAAQ,CAACP,aAAa,EAAEG,KAAK,CAAC;AAEnCK,OAAO,GAAGC,MAAM,CAACD,OAAO,GAAGR,aAAa"},"metadata":{},"sourceType":"script","externalDependencies":[]}