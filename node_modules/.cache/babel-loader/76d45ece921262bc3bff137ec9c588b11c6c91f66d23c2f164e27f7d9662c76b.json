{"ast":null,"code":"//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n//\n\n/**\n * This function creating the wide screen plugin object.\n * @param {object} pluginsman Access to the plugins manager for pptx documents.\n * @constructor\n * @name MakeWidescreenPlugin\n */\nfunction MakeWidescreenPlugin(pluginsman) {\n  var funcThis = this;\n  if (pluginsman.docType !== 'pptx' && pluginsman.docType !== 'ppsx') {\n    throw new Error('[pptx-widescreen] This plugin supporting only PowerPoint based documents.');\n  } // Endif.\n\n  this.pluginsman = pluginsman;\n  this.pptxData = pluginsman.getDataStorage();\n\n  // We want to extend the main API of the pptx document object:\n  pluginsman.registerCallback('makeDocApi', function (docObj) {\n    funcThis.extendPptxApi(docObj);\n  });\n  return this;\n}\n\n/**\n * This function extending the main document object with new API methods.\n * @param {object} docObj Document object.\n */\nMakeWidescreenPlugin.prototype.extendPptxApi = function (docObj) {\n  var funcThis = this;\n  docObj.setSlideSize = function (cx, cy, sizeType) {\n    if (cx && typeof cx === 'number') {\n      funcThis.pptxData.pptWidth = cx * funcThis.pptxData.EMUS_PER_PT;\n    } // Endif.\n\n    if (cy && typeof cy === 'number') {\n      funcThis.pptxData.pptHeight = cy * funcThis.pptxData.EMUS_PER_PT;\n    } // Endif.\n\n    /*\n    Supported types:\n     '35mm'\n    'A3'\n    'A4'\n    'B4ISO'\n    'B4JIS'\n    'B5ISO'\n    'B5JIS'\n    'banner'\n    'custom'\n    'hagakiCard'\n    'ledger'\n    'letter'\n    'overhead'\n    'screen16x10'\n    'screen16x9'\n    'screen4x3'\n    */\n\n    if (sizeType && typeof sizeType === 'string') {\n      funcThis.pptxData.pptType = sizeType;\n    } // Endif.\n  };\n\n  docObj.setWidescreen = function (wide) {\n    funcThis.pptxData.pptWidth = wide ? 960 * funcThis.pptxData.EMUS_PER_PT : funcThis.pptxData.pptWidth;\n    funcThis.pptxData.pptType = wide ? 'screen16x9' : 'screen4x3';\n  };\n};\nmodule.exports = MakeWidescreenPlugin;","map":{"version":3,"names":["MakeWidescreenPlugin","pluginsman","funcThis","docType","Error","pptxData","getDataStorage","registerCallback","docObj","extendPptxApi","prototype","setSlideSize","cx","cy","sizeType","pptWidth","EMUS_PER_PT","pptHeight","pptType","setWidescreen","wide","module","exports"],"sources":["/Users/abc/Downloads/Workspace/c2i/image-text/c2i-convert/node_modules/officegen/lib/pptxplg-widescreen.js"],"sourcesContent":["//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n//\n\n/**\n * This function creating the wide screen plugin object.\n * @param {object} pluginsman Access to the plugins manager for pptx documents.\n * @constructor\n * @name MakeWidescreenPlugin\n */\nfunction MakeWidescreenPlugin(pluginsman) {\n  var funcThis = this\n\n  if (pluginsman.docType !== 'pptx' && pluginsman.docType !== 'ppsx') {\n    throw new Error(\n      '[pptx-widescreen] This plugin supporting only PowerPoint based documents.'\n    )\n  } // Endif.\n\n  this.pluginsman = pluginsman\n  this.pptxData = pluginsman.getDataStorage()\n\n  // We want to extend the main API of the pptx document object:\n  pluginsman.registerCallback('makeDocApi', function(docObj) {\n    funcThis.extendPptxApi(docObj)\n  })\n\n  return this\n}\n\n/**\n * This function extending the main document object with new API methods.\n * @param {object} docObj Document object.\n */\nMakeWidescreenPlugin.prototype.extendPptxApi = function(docObj) {\n  var funcThis = this\n\n  docObj.setSlideSize = function(cx, cy, sizeType) {\n    if (cx && typeof cx === 'number') {\n      funcThis.pptxData.pptWidth = cx * funcThis.pptxData.EMUS_PER_PT\n    } // Endif.\n\n    if (cy && typeof cy === 'number') {\n      funcThis.pptxData.pptHeight = cy * funcThis.pptxData.EMUS_PER_PT\n    } // Endif.\n\n    /*\n    Supported types:\n\n    '35mm'\n    'A3'\n    'A4'\n    'B4ISO'\n    'B4JIS'\n    'B5ISO'\n    'B5JIS'\n    'banner'\n    'custom'\n    'hagakiCard'\n    'ledger'\n    'letter'\n    'overhead'\n    'screen16x10'\n    'screen16x9'\n    'screen4x3'\n    */\n\n    if (sizeType && typeof sizeType === 'string') {\n      funcThis.pptxData.pptType = sizeType\n    } // Endif.\n  }\n\n  docObj.setWidescreen = function(wide) {\n    funcThis.pptxData.pptWidth = wide\n      ? 960 * funcThis.pptxData.EMUS_PER_PT\n      : funcThis.pptxData.pptWidth\n    funcThis.pptxData.pptType = wide ? 'screen16x9' : 'screen4x3'\n  }\n}\n\nmodule.exports = MakeWidescreenPlugin\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,oBAAoB,CAACC,UAAU,EAAE;EACxC,IAAIC,QAAQ,GAAG,IAAI;EAEnB,IAAID,UAAU,CAACE,OAAO,KAAK,MAAM,IAAIF,UAAU,CAACE,OAAO,KAAK,MAAM,EAAE;IAClE,MAAM,IAAIC,KAAK,CACb,2EAA2E,CAC5E;EACH,CAAC,CAAC;;EAEF,IAAI,CAACH,UAAU,GAAGA,UAAU;EAC5B,IAAI,CAACI,QAAQ,GAAGJ,UAAU,CAACK,cAAc,EAAE;;EAE3C;EACAL,UAAU,CAACM,gBAAgB,CAAC,YAAY,EAAE,UAASC,MAAM,EAAE;IACzDN,QAAQ,CAACO,aAAa,CAACD,MAAM,CAAC;EAChC,CAAC,CAAC;EAEF,OAAO,IAAI;AACb;;AAEA;AACA;AACA;AACA;AACAR,oBAAoB,CAACU,SAAS,CAACD,aAAa,GAAG,UAASD,MAAM,EAAE;EAC9D,IAAIN,QAAQ,GAAG,IAAI;EAEnBM,MAAM,CAACG,YAAY,GAAG,UAASC,EAAE,EAAEC,EAAE,EAAEC,QAAQ,EAAE;IAC/C,IAAIF,EAAE,IAAI,OAAOA,EAAE,KAAK,QAAQ,EAAE;MAChCV,QAAQ,CAACG,QAAQ,CAACU,QAAQ,GAAGH,EAAE,GAAGV,QAAQ,CAACG,QAAQ,CAACW,WAAW;IACjE,CAAC,CAAC;;IAEF,IAAIH,EAAE,IAAI,OAAOA,EAAE,KAAK,QAAQ,EAAE;MAChCX,QAAQ,CAACG,QAAQ,CAACY,SAAS,GAAGJ,EAAE,GAAGX,QAAQ,CAACG,QAAQ,CAACW,WAAW;IAClE,CAAC,CAAC;;IAEF;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAGI,IAAIF,QAAQ,IAAI,OAAOA,QAAQ,KAAK,QAAQ,EAAE;MAC5CZ,QAAQ,CAACG,QAAQ,CAACa,OAAO,GAAGJ,QAAQ;IACtC,CAAC,CAAC;EACJ,CAAC;;EAEDN,MAAM,CAACW,aAAa,GAAG,UAASC,IAAI,EAAE;IACpClB,QAAQ,CAACG,QAAQ,CAACU,QAAQ,GAAGK,IAAI,GAC7B,GAAG,GAAGlB,QAAQ,CAACG,QAAQ,CAACW,WAAW,GACnCd,QAAQ,CAACG,QAAQ,CAACU,QAAQ;IAC9Bb,QAAQ,CAACG,QAAQ,CAACa,OAAO,GAAGE,IAAI,GAAG,YAAY,GAAG,WAAW;EAC/D,CAAC;AACH,CAAC;AAEDC,MAAM,CAACC,OAAO,GAAGtB,oBAAoB"},"metadata":{},"sourceType":"script","externalDependencies":[]}