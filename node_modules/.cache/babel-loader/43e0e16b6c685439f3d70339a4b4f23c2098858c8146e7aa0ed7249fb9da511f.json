{"ast":null,"code":"/**\r\n * node-compress-commons\r\n *\r\n * Copyright (c) 2014 Chris Talkington, contributors.\r\n * Licensed under the MIT license.\r\n * https://github.com/archiverjs/node-compress-commons/blob/master/LICENSE-MIT\r\n */\nvar zipUtil = require('./util');\nvar DATA_DESCRIPTOR_FLAG = 1 << 3;\nvar ENCRYPTION_FLAG = 1 << 0;\nvar NUMBER_OF_SHANNON_FANO_TREES_FLAG = 1 << 2;\nvar SLIDING_DICTIONARY_SIZE_FLAG = 1 << 1;\nvar STRONG_ENCRYPTION_FLAG = 1 << 6;\nvar UFT8_NAMES_FLAG = 1 << 11;\nvar GeneralPurposeBit = module.exports = function () {\n  if (!(this instanceof GeneralPurposeBit)) {\n    return new GeneralPurposeBit();\n  }\n  this.descriptor = false;\n  this.encryption = false;\n  this.utf8 = false;\n  this.numberOfShannonFanoTrees = 0;\n  this.strongEncryption = false;\n  this.slidingDictionarySize = 0;\n  return this;\n};\nGeneralPurposeBit.prototype.encode = function () {\n  return zipUtil.getShortBytes((this.descriptor ? DATA_DESCRIPTOR_FLAG : 0) | (this.utf8 ? UFT8_NAMES_FLAG : 0) | (this.encryption ? ENCRYPTION_FLAG : 0) | (this.strongEncryption ? STRONG_ENCRYPTION_FLAG : 0));\n};\nGeneralPurposeBit.prototype.parse = function (buf, offset) {\n  var flag = zipUtil.getShortBytesValue(buf, offset);\n  var gbp = new GeneralPurposeBit();\n  gbp.useDataDescriptor((flag & DATA_DESCRIPTOR_FLAG) !== 0);\n  gbp.useUTF8ForNames((flag & UFT8_NAMES_FLAG) !== 0);\n  gbp.useStrongEncryption((flag & STRONG_ENCRYPTION_FLAG) !== 0);\n  gbp.useEncryption((flag & ENCRYPTION_FLAG) !== 0);\n  gbp.setSlidingDictionarySize((flag & SLIDING_DICTIONARY_SIZE_FLAG) !== 0 ? 8192 : 4096);\n  gbp.setNumberOfShannonFanoTrees((flag & NUMBER_OF_SHANNON_FANO_TREES_FLAG) !== 0 ? 3 : 2);\n  return gbp;\n};\nGeneralPurposeBit.prototype.setNumberOfShannonFanoTrees = function (n) {\n  this.numberOfShannonFanoTrees = n;\n};\nGeneralPurposeBit.prototype.getNumberOfShannonFanoTrees = function () {\n  return this.numberOfShannonFanoTrees;\n};\nGeneralPurposeBit.prototype.setSlidingDictionarySize = function (n) {\n  this.slidingDictionarySize = n;\n};\nGeneralPurposeBit.prototype.getSlidingDictionarySize = function () {\n  return this.slidingDictionarySize;\n};\nGeneralPurposeBit.prototype.useDataDescriptor = function (b) {\n  this.descriptor = b;\n};\nGeneralPurposeBit.prototype.usesDataDescriptor = function () {\n  return this.descriptor;\n};\nGeneralPurposeBit.prototype.useEncryption = function (b) {\n  this.encryption = b;\n};\nGeneralPurposeBit.prototype.usesEncryption = function () {\n  return this.encryption;\n};\nGeneralPurposeBit.prototype.useStrongEncryption = function (b) {\n  this.strongEncryption = b;\n};\nGeneralPurposeBit.prototype.usesStrongEncryption = function () {\n  return this.strongEncryption;\n};\nGeneralPurposeBit.prototype.useUTF8ForNames = function (b) {\n  this.utf8 = b;\n};\nGeneralPurposeBit.prototype.usesUTF8ForNames = function () {\n  return this.utf8;\n};","map":{"version":3,"names":["zipUtil","require","DATA_DESCRIPTOR_FLAG","ENCRYPTION_FLAG","NUMBER_OF_SHANNON_FANO_TREES_FLAG","SLIDING_DICTIONARY_SIZE_FLAG","STRONG_ENCRYPTION_FLAG","UFT8_NAMES_FLAG","GeneralPurposeBit","module","exports","descriptor","encryption","utf8","numberOfShannonFanoTrees","strongEncryption","slidingDictionarySize","prototype","encode","getShortBytes","parse","buf","offset","flag","getShortBytesValue","gbp","useDataDescriptor","useUTF8ForNames","useStrongEncryption","useEncryption","setSlidingDictionarySize","setNumberOfShannonFanoTrees","n","getNumberOfShannonFanoTrees","getSlidingDictionarySize","b","usesDataDescriptor","usesEncryption","usesStrongEncryption","usesUTF8ForNames"],"sources":["/Users/abc/Downloads/Workspace/c2i/image-text/c2i-convert/node_modules/compress-commons/lib/archivers/zip/general-purpose-bit.js"],"sourcesContent":["/**\r\n * node-compress-commons\r\n *\r\n * Copyright (c) 2014 Chris Talkington, contributors.\r\n * Licensed under the MIT license.\r\n * https://github.com/archiverjs/node-compress-commons/blob/master/LICENSE-MIT\r\n */\r\nvar zipUtil = require('./util');\r\n\r\nvar DATA_DESCRIPTOR_FLAG = 1 << 3;\r\nvar ENCRYPTION_FLAG = 1 << 0;\r\nvar NUMBER_OF_SHANNON_FANO_TREES_FLAG = 1 << 2;\r\nvar SLIDING_DICTIONARY_SIZE_FLAG = 1 << 1;\r\nvar STRONG_ENCRYPTION_FLAG = 1 << 6;\r\nvar UFT8_NAMES_FLAG = 1 << 11;\r\n\r\nvar GeneralPurposeBit = module.exports = function() {\r\n  if (!(this instanceof GeneralPurposeBit)) {\r\n    return new GeneralPurposeBit();\r\n  }\r\n\r\n  this.descriptor = false;\r\n  this.encryption = false;\r\n  this.utf8 = false;\r\n  this.numberOfShannonFanoTrees = 0;\r\n  this.strongEncryption = false;\r\n  this.slidingDictionarySize = 0;\r\n\r\n  return this;\r\n};\r\n\r\nGeneralPurposeBit.prototype.encode = function() {\r\n  return zipUtil.getShortBytes(\r\n    (this.descriptor ? DATA_DESCRIPTOR_FLAG : 0) |\r\n    (this.utf8 ? UFT8_NAMES_FLAG : 0) |\r\n    (this.encryption ? ENCRYPTION_FLAG : 0) |\r\n    (this.strongEncryption ? STRONG_ENCRYPTION_FLAG : 0)\r\n  );\r\n};\r\n\r\nGeneralPurposeBit.prototype.parse = function(buf, offset) {\r\n  var flag = zipUtil.getShortBytesValue(buf, offset);\r\n  var gbp = new GeneralPurposeBit();\r\n\r\n  gbp.useDataDescriptor((flag & DATA_DESCRIPTOR_FLAG) !== 0);\r\n  gbp.useUTF8ForNames((flag & UFT8_NAMES_FLAG) !== 0);\r\n  gbp.useStrongEncryption((flag & STRONG_ENCRYPTION_FLAG) !== 0);\r\n  gbp.useEncryption((flag & ENCRYPTION_FLAG) !== 0);\r\n  gbp.setSlidingDictionarySize((flag & SLIDING_DICTIONARY_SIZE_FLAG) !== 0 ? 8192 : 4096);\r\n  gbp.setNumberOfShannonFanoTrees((flag & NUMBER_OF_SHANNON_FANO_TREES_FLAG) !== 0 ? 3 : 2);\r\n\r\n  return gbp;\r\n};\r\n\r\nGeneralPurposeBit.prototype.setNumberOfShannonFanoTrees = function(n) {\r\n  this.numberOfShannonFanoTrees = n;\r\n};\r\n\r\nGeneralPurposeBit.prototype.getNumberOfShannonFanoTrees = function() {\r\n  return this.numberOfShannonFanoTrees;\r\n};\r\n\r\nGeneralPurposeBit.prototype.setSlidingDictionarySize = function(n) {\r\n  this.slidingDictionarySize = n;\r\n};\r\n\r\nGeneralPurposeBit.prototype.getSlidingDictionarySize = function() {\r\n  return this.slidingDictionarySize;\r\n};\r\n\r\nGeneralPurposeBit.prototype.useDataDescriptor = function(b) {\r\n  this.descriptor = b;\r\n};\r\n\r\nGeneralPurposeBit.prototype.usesDataDescriptor = function() {\r\n  return this.descriptor;\r\n};\r\n\r\nGeneralPurposeBit.prototype.useEncryption = function(b) {\r\n  this.encryption = b;\r\n};\r\n\r\nGeneralPurposeBit.prototype.usesEncryption = function() {\r\n  return this.encryption;\r\n};\r\n\r\nGeneralPurposeBit.prototype.useStrongEncryption = function(b) {\r\n  this.strongEncryption = b;\r\n};\r\n\r\nGeneralPurposeBit.prototype.usesStrongEncryption = function() {\r\n  return this.strongEncryption;\r\n};\r\n\r\nGeneralPurposeBit.prototype.useUTF8ForNames = function(b) {\r\n  this.utf8 = b;\r\n};\r\n\r\nGeneralPurposeBit.prototype.usesUTF8ForNames = function() {\r\n  return this.utf8;\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}