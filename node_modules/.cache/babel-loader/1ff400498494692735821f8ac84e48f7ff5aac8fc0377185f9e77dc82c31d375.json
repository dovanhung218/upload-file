{"ast":null,"code":"'use strict';\n\nvar fs = require('fs');\nvar LRU = require('lru-cache');\nvar shebangCommand = require('shebang-command');\nvar shebangCache = new LRU({\n  max: 50,\n  maxAge: 30 * 1000\n}); // Cache just for 30sec\n\nfunction readShebang(command) {\n  var buffer;\n  var fd;\n  var shebang;\n\n  // Check if it is in the cache first\n  if (shebangCache.has(command)) {\n    return shebangCache.get(command);\n  }\n\n  // Read the first 150 bytes from the file\n  buffer = new Buffer(150);\n  try {\n    fd = fs.openSync(command, 'r');\n    fs.readSync(fd, buffer, 0, 150, 0);\n    fs.closeSync(fd);\n  } catch (e) {/* empty */}\n\n  // Attempt to extract shebang (null is returned if not a shebang)\n  shebang = shebangCommand(buffer.toString());\n\n  // Store the shebang in the cache\n  shebangCache.set(command, shebang);\n  return shebang;\n}\nmodule.exports = readShebang;","map":{"version":3,"names":["fs","require","LRU","shebangCommand","shebangCache","max","maxAge","readShebang","command","buffer","fd","shebang","has","get","Buffer","openSync","readSync","closeSync","e","toString","set","module","exports"],"sources":["/Users/abc/Downloads/Workspace/c2i/image-text/c2i-convert/node_modules/redocx/node_modules/cross-spawn/lib/util/readShebang.js"],"sourcesContent":["'use strict';\n\nvar fs = require('fs');\nvar LRU = require('lru-cache');\nvar shebangCommand = require('shebang-command');\n\nvar shebangCache = new LRU({ max: 50, maxAge: 30 * 1000 });  // Cache just for 30sec\n\nfunction readShebang(command) {\n    var buffer;\n    var fd;\n    var shebang;\n\n    // Check if it is in the cache first\n    if (shebangCache.has(command)) {\n        return shebangCache.get(command);\n    }\n\n    // Read the first 150 bytes from the file\n    buffer = new Buffer(150);\n\n    try {\n        fd = fs.openSync(command, 'r');\n        fs.readSync(fd, buffer, 0, 150, 0);\n        fs.closeSync(fd);\n    } catch (e) { /* empty */ }\n\n    // Attempt to extract shebang (null is returned if not a shebang)\n    shebang = shebangCommand(buffer.toString());\n\n    // Store the shebang in the cache\n    shebangCache.set(command, shebang);\n\n    return shebang;\n}\n\nmodule.exports = readShebang;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,EAAE,GAAGC,OAAO,CAAC,IAAI,CAAC;AACtB,IAAIC,GAAG,GAAGD,OAAO,CAAC,WAAW,CAAC;AAC9B,IAAIE,cAAc,GAAGF,OAAO,CAAC,iBAAiB,CAAC;AAE/C,IAAIG,YAAY,GAAG,IAAIF,GAAG,CAAC;EAAEG,GAAG,EAAE,EAAE;EAAEC,MAAM,EAAE,EAAE,GAAG;AAAK,CAAC,CAAC,CAAC,CAAE;;AAE7D,SAASC,WAAW,CAACC,OAAO,EAAE;EAC1B,IAAIC,MAAM;EACV,IAAIC,EAAE;EACN,IAAIC,OAAO;;EAEX;EACA,IAAIP,YAAY,CAACQ,GAAG,CAACJ,OAAO,CAAC,EAAE;IAC3B,OAAOJ,YAAY,CAACS,GAAG,CAACL,OAAO,CAAC;EACpC;;EAEA;EACAC,MAAM,GAAG,IAAIK,MAAM,CAAC,GAAG,CAAC;EAExB,IAAI;IACAJ,EAAE,GAAGV,EAAE,CAACe,QAAQ,CAACP,OAAO,EAAE,GAAG,CAAC;IAC9BR,EAAE,CAACgB,QAAQ,CAACN,EAAE,EAAED,MAAM,EAAE,CAAC,EAAE,GAAG,EAAE,CAAC,CAAC;IAClCT,EAAE,CAACiB,SAAS,CAACP,EAAE,CAAC;EACpB,CAAC,CAAC,OAAOQ,CAAC,EAAE,CAAE;;EAEd;EACAP,OAAO,GAAGR,cAAc,CAACM,MAAM,CAACU,QAAQ,EAAE,CAAC;;EAE3C;EACAf,YAAY,CAACgB,GAAG,CAACZ,OAAO,EAAEG,OAAO,CAAC;EAElC,OAAOA,OAAO;AAClB;AAEAU,MAAM,CAACC,OAAO,GAAGf,WAAW"},"metadata":{},"sourceType":"script","externalDependencies":[]}