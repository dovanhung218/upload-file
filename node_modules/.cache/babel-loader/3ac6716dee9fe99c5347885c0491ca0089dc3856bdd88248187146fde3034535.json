{"ast":null,"code":"'use strict';\n\nconst childProcess = require('child_process');\nconst util = require('util');\nconst crossSpawn = require('cross-spawn');\nconst stripEof = require('strip-eof');\nconst npmRunPath = require('npm-run-path');\nconst isStream = require('is-stream');\nconst _getStream = require('get-stream');\nconst pFinally = require('p-finally');\nconst onExit = require('signal-exit');\nconst errname = require('./lib/errname');\nconst stdio = require('./lib/stdio');\nconst TEN_MEGABYTES = 1000 * 1000 * 10;\nfunction handleArgs(cmd, args, opts) {\n  let parsed;\n  opts = Object.assign({\n    extendEnv: true,\n    env: {}\n  }, opts);\n  if (opts.extendEnv) {\n    opts.env = Object.assign({}, process.env, opts.env);\n  }\n  if (opts.__winShell === true) {\n    delete opts.__winShell;\n    parsed = {\n      command: cmd,\n      args,\n      options: opts,\n      file: cmd,\n      original: cmd\n    };\n  } else {\n    parsed = crossSpawn._parse(cmd, args, opts);\n  }\n  opts = Object.assign({\n    maxBuffer: TEN_MEGABYTES,\n    stripEof: true,\n    preferLocal: true,\n    localDir: parsed.options.cwd || process.cwd(),\n    encoding: 'utf8',\n    reject: true,\n    cleanup: true\n  }, parsed.options);\n  opts.stdio = stdio(opts);\n  if (opts.preferLocal) {\n    opts.env = npmRunPath.env(Object.assign({}, opts, {\n      cwd: opts.localDir\n    }));\n  }\n  return {\n    cmd: parsed.command,\n    args: parsed.args,\n    opts,\n    parsed\n  };\n}\nfunction handleInput(spawned, opts) {\n  const input = opts.input;\n  if (input === null || input === undefined) {\n    return;\n  }\n  if (isStream(input)) {\n    input.pipe(spawned.stdin);\n  } else {\n    spawned.stdin.end(input);\n  }\n}\nfunction handleOutput(opts, val) {\n  if (val && opts.stripEof) {\n    val = stripEof(val);\n  }\n  return val;\n}\nfunction handleShell(fn, cmd, opts) {\n  let file = '/bin/sh';\n  let args = ['-c', cmd];\n  opts = Object.assign({}, opts);\n  if (process.platform === 'win32') {\n    opts.__winShell = true;\n    file = process.env.comspec || 'cmd.exe';\n    args = ['/s', '/c', `\"${cmd}\"`];\n    opts.windowsVerbatimArguments = true;\n  }\n  if (opts.shell) {\n    file = opts.shell;\n    delete opts.shell;\n  }\n  return fn(file, args, opts);\n}\nfunction getStream(process, stream, encoding, maxBuffer) {\n  if (!process[stream]) {\n    return null;\n  }\n  let ret;\n  if (encoding) {\n    ret = _getStream(process[stream], {\n      encoding,\n      maxBuffer\n    });\n  } else {\n    ret = _getStream.buffer(process[stream], {\n      maxBuffer\n    });\n  }\n  return ret.catch(err => {\n    err.stream = stream;\n    err.message = `${stream} ${err.message}`;\n    throw err;\n  });\n}\nmodule.exports = (cmd, args, opts) => {\n  let joinedCmd = cmd;\n  if (Array.isArray(args) && args.length > 0) {\n    joinedCmd += ' ' + args.join(' ');\n  }\n  const parsed = handleArgs(cmd, args, opts);\n  const encoding = parsed.opts.encoding;\n  const maxBuffer = parsed.opts.maxBuffer;\n  let spawned;\n  try {\n    spawned = childProcess.spawn(parsed.cmd, parsed.args, parsed.opts);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n  let removeExitHandler;\n  if (parsed.opts.cleanup) {\n    removeExitHandler = onExit(() => {\n      spawned.kill();\n    });\n  }\n  let timeoutId = null;\n  let timedOut = false;\n  const cleanupTimeout = () => {\n    if (timeoutId) {\n      clearTimeout(timeoutId);\n      timeoutId = null;\n    }\n  };\n  if (parsed.opts.timeout > 0) {\n    timeoutId = setTimeout(() => {\n      timeoutId = null;\n      timedOut = true;\n      spawned.kill(parsed.opts.killSignal);\n    }, parsed.opts.timeout);\n  }\n  const processDone = new Promise(resolve => {\n    spawned.on('exit', (code, signal) => {\n      cleanupTimeout();\n      resolve({\n        code,\n        signal\n      });\n    });\n    spawned.on('error', err => {\n      cleanupTimeout();\n      resolve({\n        err\n      });\n    });\n    if (spawned.stdin) {\n      spawned.stdin.on('error', err => {\n        cleanupTimeout();\n        resolve({\n          err\n        });\n      });\n    }\n  });\n  function destroy() {\n    if (spawned.stdout) {\n      spawned.stdout.destroy();\n    }\n    if (spawned.stderr) {\n      spawned.stderr.destroy();\n    }\n  }\n  const handlePromise = () => pFinally(Promise.all([processDone, getStream(spawned, 'stdout', encoding, maxBuffer), getStream(spawned, 'stderr', encoding, maxBuffer)]).then(arr => {\n    const result = arr[0];\n    const stdout = arr[1];\n    const stderr = arr[2];\n    let err = result.err;\n    const code = result.code;\n    const signal = result.signal;\n    if (removeExitHandler) {\n      removeExitHandler();\n    }\n    if (err || code !== 0 || signal !== null) {\n      if (!err) {\n        let output = '';\n        if (Array.isArray(parsed.opts.stdio)) {\n          if (parsed.opts.stdio[2] !== 'inherit') {\n            output += output.length > 0 ? stderr : `\\n${stderr}`;\n          }\n          if (parsed.opts.stdio[1] !== 'inherit') {\n            output += `\\n${stdout}`;\n          }\n        } else if (parsed.opts.stdio !== 'inherit') {\n          output = `\\n${stderr}${stdout}`;\n        }\n        err = new Error(`Command failed: ${joinedCmd}${output}`);\n        err.code = code < 0 ? errname(code) : code;\n      }\n\n      // TODO: missing some timeout logic for killed\n      // https://github.com/nodejs/node/blob/master/lib/child_process.js#L203\n      // err.killed = spawned.killed || killed;\n      err.killed = err.killed || spawned.killed;\n      err.stdout = stdout;\n      err.stderr = stderr;\n      err.failed = true;\n      err.signal = signal || null;\n      err.cmd = joinedCmd;\n      err.timedOut = timedOut;\n      if (!parsed.opts.reject) {\n        return err;\n      }\n      throw err;\n    }\n    return {\n      stdout: handleOutput(parsed.opts, stdout),\n      stderr: handleOutput(parsed.opts, stderr),\n      code: 0,\n      failed: false,\n      killed: false,\n      signal: null,\n      cmd: joinedCmd,\n      timedOut: false\n    };\n  }), destroy);\n  crossSpawn._enoent.hookChildProcess(spawned, parsed.parsed);\n  handleInput(spawned, parsed.opts);\n  spawned.then = (onfulfilled, onrejected) => handlePromise().then(onfulfilled, onrejected);\n  spawned.catch = onrejected => handlePromise().catch(onrejected);\n  return spawned;\n};\nmodule.exports.stdout = function () {\n  // TODO: set `stderr: 'ignore'` when that option is implemented\n  return module.exports.apply(null, arguments).then(x => x.stdout);\n};\nmodule.exports.stderr = function () {\n  // TODO: set `stdout: 'ignore'` when that option is implemented\n  return module.exports.apply(null, arguments).then(x => x.stderr);\n};\nmodule.exports.shell = (cmd, opts) => handleShell(module.exports, cmd, opts);\nmodule.exports.sync = (cmd, args, opts) => {\n  const parsed = handleArgs(cmd, args, opts);\n  if (isStream(parsed.opts.input)) {\n    throw new TypeError('The `input` option cannot be a stream in sync mode');\n  }\n  const result = childProcess.spawnSync(parsed.cmd, parsed.args, parsed.opts);\n  if (result.error || result.status !== 0) {\n    throw result.error || new Error(result.stderr === '' ? result.stdout : result.stderr);\n  }\n  result.stdout = handleOutput(parsed.opts, result.stdout);\n  result.stderr = handleOutput(parsed.opts, result.stderr);\n  return result;\n};\nmodule.exports.shellSync = (cmd, opts) => handleShell(module.exports.sync, cmd, opts);\nmodule.exports.spawn = util.deprecate(module.exports, 'execa.spawn() is deprecated. Use execa() instead.');","map":{"version":3,"names":["childProcess","require","util","crossSpawn","stripEof","npmRunPath","isStream","_getStream","pFinally","onExit","errname","stdio","TEN_MEGABYTES","handleArgs","cmd","args","opts","parsed","Object","assign","extendEnv","env","process","__winShell","command","options","file","original","_parse","maxBuffer","preferLocal","localDir","cwd","encoding","reject","cleanup","handleInput","spawned","input","undefined","pipe","stdin","end","handleOutput","val","handleShell","fn","platform","comspec","windowsVerbatimArguments","shell","getStream","stream","ret","buffer","catch","err","message","module","exports","joinedCmd","Array","isArray","length","join","spawn","Promise","removeExitHandler","kill","timeoutId","timedOut","cleanupTimeout","clearTimeout","timeout","setTimeout","killSignal","processDone","resolve","on","code","signal","destroy","stdout","stderr","handlePromise","all","then","arr","result","output","Error","killed","failed","_enoent","hookChildProcess","onfulfilled","onrejected","apply","arguments","x","sync","TypeError","spawnSync","error","status","shellSync","deprecate"],"sources":["/Users/abc/Downloads/Workspace/c2i/image-text/c2i-convert/node_modules/redocx/node_modules/execa/index.js"],"sourcesContent":["'use strict';\nconst childProcess = require('child_process');\nconst util = require('util');\nconst crossSpawn = require('cross-spawn');\nconst stripEof = require('strip-eof');\nconst npmRunPath = require('npm-run-path');\nconst isStream = require('is-stream');\nconst _getStream = require('get-stream');\nconst pFinally = require('p-finally');\nconst onExit = require('signal-exit');\nconst errname = require('./lib/errname');\nconst stdio = require('./lib/stdio');\n\nconst TEN_MEGABYTES = 1000 * 1000 * 10;\n\nfunction handleArgs(cmd, args, opts) {\n\tlet parsed;\n\n\topts = Object.assign({\n\t\textendEnv: true,\n\t\tenv: {}\n\t}, opts);\n\n\tif (opts.extendEnv) {\n\t\topts.env = Object.assign({}, process.env, opts.env);\n\t}\n\n\tif (opts.__winShell === true) {\n\t\tdelete opts.__winShell;\n\t\tparsed = {\n\t\t\tcommand: cmd,\n\t\t\targs,\n\t\t\toptions: opts,\n\t\t\tfile: cmd,\n\t\t\toriginal: cmd\n\t\t};\n\t} else {\n\t\tparsed = crossSpawn._parse(cmd, args, opts);\n\t}\n\n\topts = Object.assign({\n\t\tmaxBuffer: TEN_MEGABYTES,\n\t\tstripEof: true,\n\t\tpreferLocal: true,\n\t\tlocalDir: parsed.options.cwd || process.cwd(),\n\t\tencoding: 'utf8',\n\t\treject: true,\n\t\tcleanup: true\n\t}, parsed.options);\n\n\topts.stdio = stdio(opts);\n\n\tif (opts.preferLocal) {\n\t\topts.env = npmRunPath.env(Object.assign({}, opts, {cwd: opts.localDir}));\n\t}\n\n\treturn {\n\t\tcmd: parsed.command,\n\t\targs: parsed.args,\n\t\topts,\n\t\tparsed\n\t};\n}\n\nfunction handleInput(spawned, opts) {\n\tconst input = opts.input;\n\n\tif (input === null || input === undefined) {\n\t\treturn;\n\t}\n\n\tif (isStream(input)) {\n\t\tinput.pipe(spawned.stdin);\n\t} else {\n\t\tspawned.stdin.end(input);\n\t}\n}\n\nfunction handleOutput(opts, val) {\n\tif (val && opts.stripEof) {\n\t\tval = stripEof(val);\n\t}\n\n\treturn val;\n}\n\nfunction handleShell(fn, cmd, opts) {\n\tlet file = '/bin/sh';\n\tlet args = ['-c', cmd];\n\n\topts = Object.assign({}, opts);\n\n\tif (process.platform === 'win32') {\n\t\topts.__winShell = true;\n\t\tfile = process.env.comspec || 'cmd.exe';\n\t\targs = ['/s', '/c', `\"${cmd}\"`];\n\t\topts.windowsVerbatimArguments = true;\n\t}\n\n\tif (opts.shell) {\n\t\tfile = opts.shell;\n\t\tdelete opts.shell;\n\t}\n\n\treturn fn(file, args, opts);\n}\n\nfunction getStream(process, stream, encoding, maxBuffer) {\n\tif (!process[stream]) {\n\t\treturn null;\n\t}\n\n\tlet ret;\n\n\tif (encoding) {\n\t\tret = _getStream(process[stream], {\n\t\t\tencoding,\n\t\t\tmaxBuffer\n\t\t});\n\t} else {\n\t\tret = _getStream.buffer(process[stream], {maxBuffer});\n\t}\n\n\treturn ret.catch(err => {\n\t\terr.stream = stream;\n\t\terr.message = `${stream} ${err.message}`;\n\t\tthrow err;\n\t});\n}\n\nmodule.exports = (cmd, args, opts) => {\n\tlet joinedCmd = cmd;\n\n\tif (Array.isArray(args) && args.length > 0) {\n\t\tjoinedCmd += ' ' + args.join(' ');\n\t}\n\n\tconst parsed = handleArgs(cmd, args, opts);\n\tconst encoding = parsed.opts.encoding;\n\tconst maxBuffer = parsed.opts.maxBuffer;\n\n\tlet spawned;\n\ttry {\n\t\tspawned = childProcess.spawn(parsed.cmd, parsed.args, parsed.opts);\n\t} catch (err) {\n\t\treturn Promise.reject(err);\n\t}\n\n\tlet removeExitHandler;\n\tif (parsed.opts.cleanup) {\n\t\tremoveExitHandler = onExit(() => {\n\t\t\tspawned.kill();\n\t\t});\n\t}\n\n\tlet timeoutId = null;\n\tlet timedOut = false;\n\n\tconst cleanupTimeout = () => {\n\t\tif (timeoutId) {\n\t\t\tclearTimeout(timeoutId);\n\t\t\ttimeoutId = null;\n\t\t}\n\t};\n\n\tif (parsed.opts.timeout > 0) {\n\t\ttimeoutId = setTimeout(() => {\n\t\t\ttimeoutId = null;\n\t\t\ttimedOut = true;\n\t\t\tspawned.kill(parsed.opts.killSignal);\n\t\t}, parsed.opts.timeout);\n\t}\n\n\tconst processDone = new Promise(resolve => {\n\t\tspawned.on('exit', (code, signal) => {\n\t\t\tcleanupTimeout();\n\t\t\tresolve({code, signal});\n\t\t});\n\n\t\tspawned.on('error', err => {\n\t\t\tcleanupTimeout();\n\t\t\tresolve({err});\n\t\t});\n\n\t\tif (spawned.stdin) {\n\t\t\tspawned.stdin.on('error', err => {\n\t\t\t\tcleanupTimeout();\n\t\t\t\tresolve({err});\n\t\t\t});\n\t\t}\n\t});\n\n\tfunction destroy() {\n\t\tif (spawned.stdout) {\n\t\t\tspawned.stdout.destroy();\n\t\t}\n\n\t\tif (spawned.stderr) {\n\t\t\tspawned.stderr.destroy();\n\t\t}\n\t}\n\n\tconst handlePromise = () => pFinally(Promise.all([\n\t\tprocessDone,\n\t\tgetStream(spawned, 'stdout', encoding, maxBuffer),\n\t\tgetStream(spawned, 'stderr', encoding, maxBuffer)\n\t]).then(arr => {\n\t\tconst result = arr[0];\n\t\tconst stdout = arr[1];\n\t\tconst stderr = arr[2];\n\n\t\tlet err = result.err;\n\t\tconst code = result.code;\n\t\tconst signal = result.signal;\n\n\t\tif (removeExitHandler) {\n\t\t\tremoveExitHandler();\n\t\t}\n\n\t\tif (err || code !== 0 || signal !== null) {\n\t\t\tif (!err) {\n\t\t\t\tlet output = '';\n\n\t\t\t\tif (Array.isArray(parsed.opts.stdio)) {\n\t\t\t\t\tif (parsed.opts.stdio[2] !== 'inherit') {\n\t\t\t\t\t\toutput += output.length > 0 ? stderr : `\\n${stderr}`;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (parsed.opts.stdio[1] !== 'inherit') {\n\t\t\t\t\t\toutput += `\\n${stdout}`;\n\t\t\t\t\t}\n\t\t\t\t} else if (parsed.opts.stdio !== 'inherit') {\n\t\t\t\t\toutput = `\\n${stderr}${stdout}`;\n\t\t\t\t}\n\n\t\t\t\terr = new Error(`Command failed: ${joinedCmd}${output}`);\n\t\t\t\terr.code = code < 0 ? errname(code) : code;\n\t\t\t}\n\n\t\t\t// TODO: missing some timeout logic for killed\n\t\t\t// https://github.com/nodejs/node/blob/master/lib/child_process.js#L203\n\t\t\t// err.killed = spawned.killed || killed;\n\t\t\terr.killed = err.killed || spawned.killed;\n\n\t\t\terr.stdout = stdout;\n\t\t\terr.stderr = stderr;\n\t\t\terr.failed = true;\n\t\t\terr.signal = signal || null;\n\t\t\terr.cmd = joinedCmd;\n\t\t\terr.timedOut = timedOut;\n\n\t\t\tif (!parsed.opts.reject) {\n\t\t\t\treturn err;\n\t\t\t}\n\n\t\t\tthrow err;\n\t\t}\n\n\t\treturn {\n\t\t\tstdout: handleOutput(parsed.opts, stdout),\n\t\t\tstderr: handleOutput(parsed.opts, stderr),\n\t\t\tcode: 0,\n\t\t\tfailed: false,\n\t\t\tkilled: false,\n\t\t\tsignal: null,\n\t\t\tcmd: joinedCmd,\n\t\t\ttimedOut: false\n\t\t};\n\t}), destroy);\n\n\tcrossSpawn._enoent.hookChildProcess(spawned, parsed.parsed);\n\n\thandleInput(spawned, parsed.opts);\n\n\tspawned.then = (onfulfilled, onrejected) => handlePromise().then(onfulfilled, onrejected);\n\tspawned.catch = onrejected => handlePromise().catch(onrejected);\n\n\treturn spawned;\n};\n\nmodule.exports.stdout = function () {\n\t// TODO: set `stderr: 'ignore'` when that option is implemented\n\treturn module.exports.apply(null, arguments).then(x => x.stdout);\n};\n\nmodule.exports.stderr = function () {\n\t// TODO: set `stdout: 'ignore'` when that option is implemented\n\treturn module.exports.apply(null, arguments).then(x => x.stderr);\n};\n\nmodule.exports.shell = (cmd, opts) => handleShell(module.exports, cmd, opts);\n\nmodule.exports.sync = (cmd, args, opts) => {\n\tconst parsed = handleArgs(cmd, args, opts);\n\n\tif (isStream(parsed.opts.input)) {\n\t\tthrow new TypeError('The `input` option cannot be a stream in sync mode');\n\t}\n\n\tconst result = childProcess.spawnSync(parsed.cmd, parsed.args, parsed.opts);\n\n\tif (result.error || result.status !== 0) {\n\t\tthrow (result.error || new Error(result.stderr === '' ? result.stdout : result.stderr));\n\t}\n\n\tresult.stdout = handleOutput(parsed.opts, result.stdout);\n\tresult.stderr = handleOutput(parsed.opts, result.stderr);\n\n\treturn result;\n};\n\nmodule.exports.shellSync = (cmd, opts) => handleShell(module.exports.sync, cmd, opts);\n\nmodule.exports.spawn = util.deprecate(module.exports, 'execa.spawn() is deprecated. Use execa() instead.');\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}