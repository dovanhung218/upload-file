{"ast":null,"code":"/**\r\n * node-compress-commons\r\n *\r\n * Copyright (c) 2014 Chris Talkington, contributors.\r\n * Licensed under the MIT license.\r\n * https://github.com/archiverjs/node-compress-commons/blob/master/LICENSE-MIT\r\n */\nvar inherits = require('util').inherits;\nvar Transform = require('readable-stream').Transform;\nvar ArchiveEntry = require('./archive-entry');\nvar util = require('../util');\nvar ArchiveOutputStream = module.exports = function (options) {\n  if (!(this instanceof ArchiveOutputStream)) {\n    return new ArchiveOutputStream(options);\n  }\n  Transform.call(this, options);\n  this.offset = 0;\n  this._archive = {\n    finish: false,\n    finished: false,\n    processing: false\n  };\n};\ninherits(ArchiveOutputStream, Transform);\nArchiveOutputStream.prototype._appendBuffer = function (zae, source, callback) {\n  // scaffold only\n};\nArchiveOutputStream.prototype._appendStream = function (zae, source, callback) {\n  // scaffold only\n};\nArchiveOutputStream.prototype._emitErrorCallback = function (err) {\n  if (err) {\n    this.emit('error', err);\n  }\n};\nArchiveOutputStream.prototype._finish = function (ae) {\n  // scaffold only\n};\nArchiveOutputStream.prototype._normalizeEntry = function (ae) {\n  // scaffold only\n};\nArchiveOutputStream.prototype._transform = function (chunk, encoding, callback) {\n  callback(null, chunk);\n};\nArchiveOutputStream.prototype.entry = function (ae, source, callback) {\n  source = source || null;\n  if (typeof callback !== 'function') {\n    callback = this._emitErrorCallback.bind(this);\n  }\n  if (!(ae instanceof ArchiveEntry)) {\n    callback(new Error('not a valid instance of ArchiveEntry'));\n    return;\n  }\n  if (this._archive.finish || this._archive.finished) {\n    callback(new Error('unacceptable entry after finish'));\n    return;\n  }\n  if (this._archive.processing) {\n    callback(new Error('already processing an entry'));\n    return;\n  }\n  this._archive.processing = true;\n  this._normalizeEntry(ae);\n  this._entry = ae;\n  source = util.normalizeInputSource(source);\n  if (Buffer.isBuffer(source)) {\n    this._appendBuffer(ae, source, callback);\n  } else if (util.isStream(source)) {\n    this._appendStream(ae, source, callback);\n  } else {\n    this._archive.processing = false;\n    callback(new Error('input source must be valid Stream or Buffer instance'));\n    return;\n  }\n  return this;\n};\nArchiveOutputStream.prototype.finish = function () {\n  if (this._archive.processing) {\n    this._archive.finish = true;\n    return;\n  }\n  this._finish();\n};\nArchiveOutputStream.prototype.getBytesWritten = function () {\n  return this.offset;\n};\nArchiveOutputStream.prototype.write = function (chunk, cb) {\n  if (chunk) {\n    this.offset += chunk.length;\n  }\n  return Transform.prototype.write.call(this, chunk, cb);\n};","map":{"version":3,"names":["inherits","require","Transform","ArchiveEntry","util","ArchiveOutputStream","module","exports","options","call","offset","_archive","finish","finished","processing","prototype","_appendBuffer","zae","source","callback","_appendStream","_emitErrorCallback","err","emit","_finish","ae","_normalizeEntry","_transform","chunk","encoding","entry","bind","Error","_entry","normalizeInputSource","Buffer","isBuffer","isStream","getBytesWritten","write","cb","length"],"sources":["/Users/abc/Downloads/Workspace/c2i/image-text/c2i-convert/node_modules/compress-commons/lib/archivers/archive-output-stream.js"],"sourcesContent":["/**\r\n * node-compress-commons\r\n *\r\n * Copyright (c) 2014 Chris Talkington, contributors.\r\n * Licensed under the MIT license.\r\n * https://github.com/archiverjs/node-compress-commons/blob/master/LICENSE-MIT\r\n */\r\nvar inherits = require('util').inherits;\r\nvar Transform = require('readable-stream').Transform;\r\n\r\nvar ArchiveEntry = require('./archive-entry');\r\nvar util = require('../util');\r\n\r\nvar ArchiveOutputStream = module.exports = function(options) {\r\n  if (!(this instanceof ArchiveOutputStream)) {\r\n    return new ArchiveOutputStream(options);\r\n  }\r\n\r\n  Transform.call(this, options);\r\n\r\n  this.offset = 0;\r\n  this._archive = {\r\n    finish: false,\r\n    finished: false,\r\n    processing: false\r\n  };\r\n};\r\n\r\ninherits(ArchiveOutputStream, Transform);\r\n\r\nArchiveOutputStream.prototype._appendBuffer = function(zae, source, callback) {\r\n  // scaffold only\r\n};\r\n\r\nArchiveOutputStream.prototype._appendStream = function(zae, source, callback) {\r\n  // scaffold only\r\n};\r\n\r\nArchiveOutputStream.prototype._emitErrorCallback = function(err) {\r\n  if (err) {\r\n    this.emit('error', err);\r\n  }\r\n};\r\n\r\nArchiveOutputStream.prototype._finish = function(ae) {\r\n  // scaffold only\r\n};\r\n\r\nArchiveOutputStream.prototype._normalizeEntry = function(ae) {\r\n  // scaffold only\r\n};\r\n\r\nArchiveOutputStream.prototype._transform = function(chunk, encoding, callback) {\r\n  callback(null, chunk);\r\n};\r\n\r\nArchiveOutputStream.prototype.entry = function(ae, source, callback) {\r\n  source = source || null;\r\n\r\n  if (typeof callback !== 'function') {\r\n    callback = this._emitErrorCallback.bind(this);\r\n  }\r\n\r\n  if (!(ae instanceof ArchiveEntry)) {\r\n    callback(new Error('not a valid instance of ArchiveEntry'));\r\n    return;\r\n  }\r\n\r\n  if (this._archive.finish || this._archive.finished) {\r\n    callback(new Error('unacceptable entry after finish'));\r\n    return;\r\n  }\r\n\r\n  if (this._archive.processing) {\r\n    callback(new Error('already processing an entry'));\r\n    return;\r\n  }\r\n\r\n  this._archive.processing = true;\r\n  this._normalizeEntry(ae);\r\n  this._entry = ae;\r\n\r\n  source = util.normalizeInputSource(source);\r\n\r\n  if (Buffer.isBuffer(source)) {\r\n    this._appendBuffer(ae, source, callback);\r\n  } else if (util.isStream(source)) {\r\n    this._appendStream(ae, source, callback);\r\n  } else {\r\n    this._archive.processing = false;\r\n    callback(new Error('input source must be valid Stream or Buffer instance'));\r\n    return;\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\nArchiveOutputStream.prototype.finish = function() {\r\n  if (this._archive.processing) {\r\n    this._archive.finish = true;\r\n    return;\r\n  }\r\n\r\n  this._finish();\r\n};\r\n\r\nArchiveOutputStream.prototype.getBytesWritten = function() {\r\n  return this.offset;\r\n};\r\n\r\nArchiveOutputStream.prototype.write = function(chunk, cb) {\r\n  if (chunk) {\r\n    this.offset += chunk.length;\r\n  }\r\n\r\n  return Transform.prototype.write.call(this, chunk, cb);\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}