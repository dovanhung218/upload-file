{"ast":null,"code":"/**\r\n * node-crc32-stream\r\n *\r\n * Copyright (c) 2014 Chris Talkington, contributors.\r\n * Licensed under the MIT license.\r\n * https://github.com/archiverjs/node-crc32-stream/blob/master/LICENSE-MIT\r\n */\n\n'use strict';\n\nconst {\n  DeflateRaw\n} = require('zlib');\nconst {\n  crc32\n} = require('crc');\nclass DeflateCRC32Stream extends DeflateRaw {\n  constructor(options) {\n    super(options);\n    this.checksum = Buffer.allocUnsafe(4);\n    this.checksum.writeInt32BE(0, 0);\n    this.rawSize = 0;\n    this.compressedSize = 0;\n  }\n  push(chunk, encoding) {\n    if (chunk) {\n      this.compressedSize += chunk.length;\n    }\n    return super.push(chunk, encoding);\n  }\n  write(chunk, enc, cb) {\n    if (chunk) {\n      this.checksum = crc32(chunk, this.checksum);\n      this.rawSize += chunk.length;\n    }\n    return super.write(chunk, enc, cb);\n  }\n  digest(encoding) {\n    const checksum = Buffer.allocUnsafe(4);\n    checksum.writeUInt32BE(this.checksum >>> 0, 0);\n    return encoding ? checksum.toString(encoding) : checksum;\n  }\n  hex() {\n    return this.digest('hex').toUpperCase();\n  }\n  size() {\n    let compressed = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    if (compressed) {\n      return this.compressedSize;\n    } else {\n      return this.rawSize;\n    }\n  }\n}\nmodule.exports = DeflateCRC32Stream;","map":{"version":3,"names":["DeflateRaw","require","crc32","DeflateCRC32Stream","constructor","options","checksum","Buffer","allocUnsafe","writeInt32BE","rawSize","compressedSize","push","chunk","encoding","length","write","enc","cb","digest","writeUInt32BE","toString","hex","toUpperCase","size","compressed","module","exports"],"sources":["/Users/abc/Downloads/Workspace/c2i/image-text/c2i-convert/node_modules/crc32-stream/lib/deflate-crc32-stream.js"],"sourcesContent":["/**\r\n * node-crc32-stream\r\n *\r\n * Copyright (c) 2014 Chris Talkington, contributors.\r\n * Licensed under the MIT license.\r\n * https://github.com/archiverjs/node-crc32-stream/blob/master/LICENSE-MIT\r\n */\r\n\r\n'use strict';\r\n\r\nconst {DeflateRaw} = require('zlib');\r\n\r\nconst {crc32} = require('crc');\r\n\r\nclass DeflateCRC32Stream extends DeflateRaw {\r\n  constructor(options) {\r\n    super(options);\r\n\r\n    this.checksum = Buffer.allocUnsafe(4);\r\n    this.checksum.writeInt32BE(0, 0);\r\n\r\n    this.rawSize = 0;\r\n    this.compressedSize = 0;\r\n  }\r\n\r\n  push(chunk, encoding) {\r\n    if (chunk) {\r\n      this.compressedSize += chunk.length;\r\n    }\r\n\r\n    return super.push(chunk, encoding);\r\n  }\r\n\r\n  write(chunk, enc, cb) {\r\n    if (chunk) {\r\n      this.checksum = crc32(chunk, this.checksum);\r\n      this.rawSize += chunk.length;\r\n    }\r\n\r\n    return super.write(chunk, enc, cb);\r\n  }\r\n\r\n  digest(encoding) {\r\n    const checksum = Buffer.allocUnsafe(4);\r\n    checksum.writeUInt32BE(this.checksum >>> 0, 0);\r\n    return encoding ? checksum.toString(encoding) : checksum;\r\n  }\r\n\r\n  hex() {\r\n    return this.digest('hex').toUpperCase();\r\n  }\r\n\r\n  size(compressed = false) {\r\n    if (compressed) {\r\n      return this.compressedSize;\r\n    } else {\r\n      return this.rawSize;\r\n    }\r\n  }\r\n}\r\n\r\nmodule.exports = DeflateCRC32Stream;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAM;EAACA;AAAU,CAAC,GAAGC,OAAO,CAAC,MAAM,CAAC;AAEpC,MAAM;EAACC;AAAK,CAAC,GAAGD,OAAO,CAAC,KAAK,CAAC;AAE9B,MAAME,kBAAkB,SAASH,UAAU,CAAC;EAC1CI,WAAW,CAACC,OAAO,EAAE;IACnB,KAAK,CAACA,OAAO,CAAC;IAEd,IAAI,CAACC,QAAQ,GAAGC,MAAM,CAACC,WAAW,CAAC,CAAC,CAAC;IACrC,IAAI,CAACF,QAAQ,CAACG,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;IAEhC,IAAI,CAACC,OAAO,GAAG,CAAC;IAChB,IAAI,CAACC,cAAc,GAAG,CAAC;EACzB;EAEAC,IAAI,CAACC,KAAK,EAAEC,QAAQ,EAAE;IACpB,IAAID,KAAK,EAAE;MACT,IAAI,CAACF,cAAc,IAAIE,KAAK,CAACE,MAAM;IACrC;IAEA,OAAO,KAAK,CAACH,IAAI,CAACC,KAAK,EAAEC,QAAQ,CAAC;EACpC;EAEAE,KAAK,CAACH,KAAK,EAAEI,GAAG,EAAEC,EAAE,EAAE;IACpB,IAAIL,KAAK,EAAE;MACT,IAAI,CAACP,QAAQ,GAAGJ,KAAK,CAACW,KAAK,EAAE,IAAI,CAACP,QAAQ,CAAC;MAC3C,IAAI,CAACI,OAAO,IAAIG,KAAK,CAACE,MAAM;IAC9B;IAEA,OAAO,KAAK,CAACC,KAAK,CAACH,KAAK,EAAEI,GAAG,EAAEC,EAAE,CAAC;EACpC;EAEAC,MAAM,CAACL,QAAQ,EAAE;IACf,MAAMR,QAAQ,GAAGC,MAAM,CAACC,WAAW,CAAC,CAAC,CAAC;IACtCF,QAAQ,CAACc,aAAa,CAAC,IAAI,CAACd,QAAQ,KAAK,CAAC,EAAE,CAAC,CAAC;IAC9C,OAAOQ,QAAQ,GAAGR,QAAQ,CAACe,QAAQ,CAACP,QAAQ,CAAC,GAAGR,QAAQ;EAC1D;EAEAgB,GAAG,GAAG;IACJ,OAAO,IAAI,CAACH,MAAM,CAAC,KAAK,CAAC,CAACI,WAAW,EAAE;EACzC;EAEAC,IAAI,GAAqB;IAAA,IAApBC,UAAU,uEAAG,KAAK;IACrB,IAAIA,UAAU,EAAE;MACd,OAAO,IAAI,CAACd,cAAc;IAC5B,CAAC,MAAM;MACL,OAAO,IAAI,CAACD,OAAO;IACrB;EACF;AACF;AAEAgB,MAAM,CAACC,OAAO,GAAGxB,kBAAkB"},"metadata":{},"sourceType":"script","externalDependencies":[]}