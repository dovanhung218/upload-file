{"ast":null,"code":"'use strict';\n\nvar cp = require('child_process');\nvar parse = require('./lib/parse');\nvar enoent = require('./lib/enoent');\nvar cpSpawnSync = cp.spawnSync;\nfunction spawn(command, args, options) {\n  var parsed;\n  var spawned;\n\n  // Parse the arguments\n  parsed = parse(command, args, options);\n\n  // Spawn the child process\n  spawned = cp.spawn(parsed.command, parsed.args, parsed.options);\n\n  // Hook into child process \"exit\" event to emit an error if the command\n  // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n  enoent.hookChildProcess(spawned, parsed);\n  return spawned;\n}\nfunction spawnSync(command, args, options) {\n  var parsed;\n  var result;\n  if (!cpSpawnSync) {\n    try {\n      cpSpawnSync = require('spawn-sync'); // eslint-disable-line global-require\n    } catch (ex) {\n      throw new Error('In order to use spawnSync on node 0.10 or older, you must ' + 'install spawn-sync:\\n\\n' + '  npm install spawn-sync --save');\n    }\n  }\n\n  // Parse the arguments\n  parsed = parse(command, args, options);\n\n  // Spawn the child process\n  result = cpSpawnSync(parsed.command, parsed.args, parsed.options);\n\n  // Analyze if the command does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n  result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);\n  return result;\n}\nmodule.exports = spawn;\nmodule.exports.spawn = spawn;\nmodule.exports.sync = spawnSync;\nmodule.exports._parse = parse;\nmodule.exports._enoent = enoent;","map":{"version":3,"names":["cp","require","parse","enoent","cpSpawnSync","spawnSync","spawn","command","args","options","parsed","spawned","hookChildProcess","result","ex","Error","error","verifyENOENTSync","status","module","exports","sync","_parse","_enoent"],"sources":["/Users/abc/Downloads/Workspace/c2i/image-text/c2i-convert/node_modules/redocx/node_modules/cross-spawn/index.js"],"sourcesContent":["'use strict';\n\nvar cp = require('child_process');\nvar parse = require('./lib/parse');\nvar enoent = require('./lib/enoent');\n\nvar cpSpawnSync = cp.spawnSync;\n\nfunction spawn(command, args, options) {\n    var parsed;\n    var spawned;\n\n    // Parse the arguments\n    parsed = parse(command, args, options);\n\n    // Spawn the child process\n    spawned = cp.spawn(parsed.command, parsed.args, parsed.options);\n\n    // Hook into child process \"exit\" event to emit an error if the command\n    // does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    enoent.hookChildProcess(spawned, parsed);\n\n    return spawned;\n}\n\nfunction spawnSync(command, args, options) {\n    var parsed;\n    var result;\n\n    if (!cpSpawnSync) {\n        try {\n            cpSpawnSync = require('spawn-sync');  // eslint-disable-line global-require\n        } catch (ex) {\n            throw new Error(\n                'In order to use spawnSync on node 0.10 or older, you must ' +\n                'install spawn-sync:\\n\\n' +\n                '  npm install spawn-sync --save'\n            );\n        }\n    }\n\n    // Parse the arguments\n    parsed = parse(command, args, options);\n\n    // Spawn the child process\n    result = cpSpawnSync(parsed.command, parsed.args, parsed.options);\n\n    // Analyze if the command does not exists, see: https://github.com/IndigoUnited/node-cross-spawn/issues/16\n    result.error = result.error || enoent.verifyENOENTSync(result.status, parsed);\n\n    return result;\n}\n\nmodule.exports = spawn;\nmodule.exports.spawn = spawn;\nmodule.exports.sync = spawnSync;\n\nmodule.exports._parse = parse;\nmodule.exports._enoent = enoent;\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,EAAE,GAAGC,OAAO,CAAC,eAAe,CAAC;AACjC,IAAIC,KAAK,GAAGD,OAAO,CAAC,aAAa,CAAC;AAClC,IAAIE,MAAM,GAAGF,OAAO,CAAC,cAAc,CAAC;AAEpC,IAAIG,WAAW,GAAGJ,EAAE,CAACK,SAAS;AAE9B,SAASC,KAAK,CAACC,OAAO,EAAEC,IAAI,EAAEC,OAAO,EAAE;EACnC,IAAIC,MAAM;EACV,IAAIC,OAAO;;EAEX;EACAD,MAAM,GAAGR,KAAK,CAACK,OAAO,EAAEC,IAAI,EAAEC,OAAO,CAAC;;EAEtC;EACAE,OAAO,GAAGX,EAAE,CAACM,KAAK,CAACI,MAAM,CAACH,OAAO,EAAEG,MAAM,CAACF,IAAI,EAAEE,MAAM,CAACD,OAAO,CAAC;;EAE/D;EACA;EACAN,MAAM,CAACS,gBAAgB,CAACD,OAAO,EAAED,MAAM,CAAC;EAExC,OAAOC,OAAO;AAClB;AAEA,SAASN,SAAS,CAACE,OAAO,EAAEC,IAAI,EAAEC,OAAO,EAAE;EACvC,IAAIC,MAAM;EACV,IAAIG,MAAM;EAEV,IAAI,CAACT,WAAW,EAAE;IACd,IAAI;MACAA,WAAW,GAAGH,OAAO,CAAC,YAAY,CAAC,CAAC,CAAE;IAC1C,CAAC,CAAC,OAAOa,EAAE,EAAE;MACT,MAAM,IAAIC,KAAK,CACX,4DAA4D,GAC5D,yBAAyB,GACzB,iCAAiC,CACpC;IACL;EACJ;;EAEA;EACAL,MAAM,GAAGR,KAAK,CAACK,OAAO,EAAEC,IAAI,EAAEC,OAAO,CAAC;;EAEtC;EACAI,MAAM,GAAGT,WAAW,CAACM,MAAM,CAACH,OAAO,EAAEG,MAAM,CAACF,IAAI,EAAEE,MAAM,CAACD,OAAO,CAAC;;EAEjE;EACAI,MAAM,CAACG,KAAK,GAAGH,MAAM,CAACG,KAAK,IAAIb,MAAM,CAACc,gBAAgB,CAACJ,MAAM,CAACK,MAAM,EAAER,MAAM,CAAC;EAE7E,OAAOG,MAAM;AACjB;AAEAM,MAAM,CAACC,OAAO,GAAGd,KAAK;AACtBa,MAAM,CAACC,OAAO,CAACd,KAAK,GAAGA,KAAK;AAC5Ba,MAAM,CAACC,OAAO,CAACC,IAAI,GAAGhB,SAAS;AAE/Bc,MAAM,CAACC,OAAO,CAACE,MAAM,GAAGpB,KAAK;AAC7BiB,MAAM,CAACC,OAAO,CAACG,OAAO,GAAGpB,MAAM"},"metadata":{},"sourceType":"script","externalDependencies":[]}