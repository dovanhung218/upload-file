{"ast":null,"code":"/**\r\n * archiver-utils\r\n *\r\n * Copyright (c) 2015 Chris Talkington.\r\n * Licensed under the MIT license.\r\n * https://github.com/archiverjs/archiver-utils/blob/master/LICENSE\r\n */\nvar fs = require('graceful-fs');\nvar path = require('path');\nvar nutil = require('util');\nvar lazystream = require('lazystream');\nvar normalizePath = require('normalize-path');\nvar defaults = require('lodash.defaults');\nvar Stream = require('stream').Stream;\nvar PassThrough = require('readable-stream').PassThrough;\nvar utils = module.exports = {};\nutils.file = require('./file.js');\nfunction assertPath(path) {\n  if (typeof path !== 'string') {\n    throw new TypeError('Path must be a string. Received ' + nutils.inspect(path));\n  }\n}\nutils.collectStream = function (source, callback) {\n  var collection = [];\n  var size = 0;\n  source.on('error', callback);\n  source.on('data', function (chunk) {\n    collection.push(chunk);\n    size += chunk.length;\n  });\n  source.on('end', function () {\n    var buf = new Buffer(size);\n    var offset = 0;\n    collection.forEach(function (data) {\n      data.copy(buf, offset);\n      offset += data.length;\n    });\n    callback(null, buf);\n  });\n};\nutils.dateify = function (dateish) {\n  dateish = dateish || new Date();\n  if (dateish instanceof Date) {\n    dateish = dateish;\n  } else if (typeof dateish === 'string') {\n    dateish = new Date(dateish);\n  } else {\n    dateish = new Date();\n  }\n  return dateish;\n};\n\n// this is slightly different from lodash version\nutils.defaults = function (object, source, guard) {\n  var args = arguments;\n  args[0] = args[0] || {};\n  return defaults(...args);\n};\nutils.isStream = function (source) {\n  return source instanceof Stream;\n};\nutils.lazyReadStream = function (filepath) {\n  return new lazystream.Readable(function () {\n    return fs.createReadStream(filepath);\n  });\n};\nutils.normalizeInputSource = function (source) {\n  if (source === null) {\n    return new Buffer(0);\n  } else if (typeof source === 'string') {\n    return new Buffer(source);\n  } else if (utils.isStream(source) && !source._readableState) {\n    var normalized = new PassThrough();\n    source.pipe(normalized);\n    return normalized;\n  }\n  return source;\n};\nutils.sanitizePath = function (filepath) {\n  return normalizePath(filepath, false).replace(/^\\w+:/, '').replace(/^(\\.\\.\\/|\\/)+/, '');\n};\nutils.trailingSlashIt = function (str) {\n  return str.slice(-1) !== '/' ? str + '/' : str;\n};\nutils.unixifyPath = function (filepath) {\n  return normalizePath(filepath, false).replace(/^\\w+:/, '');\n};\nutils.walkdir = function (dirpath, base, callback) {\n  var results = [];\n  if (typeof base === 'function') {\n    callback = base;\n    base = dirpath;\n  }\n  fs.readdir(dirpath, function (err, list) {\n    var i = 0;\n    var file;\n    var filepath;\n    if (err) {\n      return callback(err);\n    }\n    (function next() {\n      file = list[i++];\n      if (!file) {\n        return callback(null, results);\n      }\n      filepath = path.join(dirpath, file);\n      fs.stat(filepath, function (err, stats) {\n        results.push({\n          path: filepath,\n          relative: path.relative(base, filepath).replace(/\\\\/g, '/'),\n          stats: stats\n        });\n        if (stats && stats.isDirectory()) {\n          utils.walkdir(filepath, base, function (err, res) {\n            res.forEach(function (dirEntry) {\n              results.push(dirEntry);\n            });\n            next();\n          });\n        } else {\n          next();\n        }\n      });\n    })();\n  });\n};","map":{"version":3,"names":["fs","require","path","nutil","lazystream","normalizePath","defaults","Stream","PassThrough","utils","module","exports","file","assertPath","TypeError","nutils","inspect","collectStream","source","callback","collection","size","on","chunk","push","length","buf","Buffer","offset","forEach","data","copy","dateify","dateish","Date","object","guard","args","arguments","isStream","lazyReadStream","filepath","Readable","createReadStream","normalizeInputSource","_readableState","normalized","pipe","sanitizePath","replace","trailingSlashIt","str","slice","unixifyPath","walkdir","dirpath","base","results","readdir","err","list","i","next","join","stat","stats","relative","isDirectory","res","dirEntry"],"sources":["/Users/abc/Downloads/Workspace/c2i/image-text/c2i-convert/node_modules/archiver-utils/index.js"],"sourcesContent":["/**\r\n * archiver-utils\r\n *\r\n * Copyright (c) 2015 Chris Talkington.\r\n * Licensed under the MIT license.\r\n * https://github.com/archiverjs/archiver-utils/blob/master/LICENSE\r\n */\r\nvar fs = require('graceful-fs');\r\nvar path = require('path');\r\nvar nutil = require('util');\r\nvar lazystream = require('lazystream');\r\nvar normalizePath = require('normalize-path');\r\nvar defaults = require('lodash.defaults');\r\n\r\nvar Stream = require('stream').Stream;\r\nvar PassThrough = require('readable-stream').PassThrough;\r\n\r\nvar utils = module.exports = {};\r\nutils.file = require('./file.js');\r\n\r\nfunction assertPath(path) {\r\n  if (typeof path !== 'string') {\r\n    throw new TypeError('Path must be a string. Received ' + nutils.inspect(path));\r\n  }\r\n}\r\n\r\nutils.collectStream = function(source, callback) {\r\n  var collection = [];\r\n  var size = 0;\r\n\r\n  source.on('error', callback);\r\n\r\n  source.on('data', function(chunk) {\r\n    collection.push(chunk);\r\n    size += chunk.length;\r\n  });\r\n\r\n  source.on('end', function() {\r\n    var buf = new Buffer(size);\r\n    var offset = 0;\r\n\r\n    collection.forEach(function(data) {\r\n      data.copy(buf, offset);\r\n      offset += data.length;\r\n    });\r\n\r\n    callback(null, buf);\r\n  });\r\n};\r\n\r\nutils.dateify = function(dateish) {\r\n  dateish = dateish || new Date();\r\n\r\n  if (dateish instanceof Date) {\r\n    dateish = dateish;\r\n  } else if (typeof dateish === 'string') {\r\n    dateish = new Date(dateish);\r\n  } else {\r\n    dateish = new Date();\r\n  }\r\n\r\n  return dateish;\r\n};\r\n\r\n// this is slightly different from lodash version\r\nutils.defaults = function(object, source, guard) {\r\n  var args = arguments;\r\n  args[0] = args[0] || {};\r\n\r\n  return defaults(...args);\r\n};\r\n\r\nutils.isStream = function(source) {\r\n  return source instanceof Stream;\r\n};\r\n\r\nutils.lazyReadStream = function(filepath) {\r\n  return new lazystream.Readable(function() {\r\n    return fs.createReadStream(filepath);\r\n  });\r\n};\r\n\r\nutils.normalizeInputSource = function(source) {\r\n  if (source === null) {\r\n    return new Buffer(0);\r\n  } else if (typeof source === 'string') {\r\n    return new Buffer(source);\r\n  } else if (utils.isStream(source) && !source._readableState) {\r\n    var normalized = new PassThrough();\r\n    source.pipe(normalized);\r\n\r\n    return normalized;\r\n  }\r\n\r\n  return source;\r\n};\r\n\r\nutils.sanitizePath = function(filepath) {\r\n  return normalizePath(filepath, false).replace(/^\\w+:/, '').replace(/^(\\.\\.\\/|\\/)+/, '');\r\n};\r\n\r\nutils.trailingSlashIt = function(str) {\r\n  return str.slice(-1) !== '/' ? str + '/' : str;\r\n};\r\n\r\nutils.unixifyPath = function(filepath) {\r\n  return normalizePath(filepath, false).replace(/^\\w+:/, '');\r\n};\r\n\r\nutils.walkdir = function(dirpath, base, callback) {\r\n  var results = [];\r\n\r\n  if (typeof base === 'function') {\r\n    callback = base;\r\n    base = dirpath;\r\n  }\r\n\r\n  fs.readdir(dirpath, function(err, list) {\r\n    var i = 0;\r\n    var file;\r\n    var filepath;\r\n\r\n    if (err) {\r\n      return callback(err);\r\n    }\r\n\r\n    (function next() {\r\n      file = list[i++];\r\n\r\n      if (!file) {\r\n        return callback(null, results);\r\n      }\r\n\r\n      filepath = path.join(dirpath, file);\r\n\r\n      fs.stat(filepath, function(err, stats) {\r\n        results.push({\r\n          path: filepath,\r\n          relative: path.relative(base, filepath).replace(/\\\\/g, '/'),\r\n          stats: stats\r\n        });\r\n\r\n        if (stats && stats.isDirectory()) {\r\n          utils.walkdir(filepath, base, function(err, res) {\r\n            res.forEach(function(dirEntry) {\r\n              results.push(dirEntry);\r\n            });\r\n            next();\r\n          });\r\n        } else {\r\n          next();\r\n        }\r\n      });\r\n    })();\r\n  });\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}