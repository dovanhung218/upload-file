{"ast":null,"code":"//\n// officegen: tables\n//\n// Please refer to README.md for this module's documentations.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n//\n\nvar EMU = 914400; // OfficeXML measures in English Metric Units\n\nmodule.exports = {\n  // assume passed in an array of row objects\n  getTable: function (rows, options) {\n    options = options || {};\n    options.tabstyle = options.tabstyle ? options.tabstyle : '{5C22544A-7EE6-4342-B048-85BDC9FD1C3A}';\n    if (options.columnWidth === undefined) {\n      options.columnWidth = 8 / rows[0].length * EMU;\n    }\n    var self = this;\n    return self._getBase(rows.map(function (row, row_idx) {\n      return self._getRow(row.map(function (val, idx) {\n        var cellVal = val;\n        var cellOptions = options;\n        if (typeof val === 'object') {\n          // Cell-specific formatting passed in, override table options\n          cellOptions = val.hasOwnProperty('opts') ? val.opts : options;\n          cellVal = val.hasOwnProperty('val') ? val.val : val;\n        }\n        return self._getCell(cellVal, cellOptions, idx, row_idx);\n      }), options);\n    }), self._getColSpecs(rows, options), options);\n  },\n  _getBase: function (rowSpecs, colSpecs, options) {\n    return {\n      'p:graphicFrame': {\n        'p:nvGraphicFramePr': {\n          'p:cNvPr': {\n            '@id': '6',\n            '@name': 'Table 5'\n          },\n          'p:cNvGraphicFramePr': {\n            'a:graphicFrameLocks': {\n              '@noGrp': '1'\n            }\n          },\n          'p:nvPr': {\n            'p:extLst': {\n              'p:ext': {\n                '@uri': '{D42A27DB-BD31-4B8C-83A1-F6EECF244321}',\n                'p14:modId': {\n                  '@xmlns:p14': 'http://schemas.microsoft.com/office/powerpoint/2010/main',\n                  '@val': '1579011935'\n                }\n              }\n            }\n          }\n        },\n        'p:xfrm': {\n          'a:off': {\n            '@x': options.x || '1524000',\n            '@y': options.y || '1397000'\n          },\n          'a:ext': {\n            '@cx': options.cx || '6096000',\n            '@cy': options.cy || '1483360'\n          }\n        },\n        'a:graphic': {\n          'a:graphicData': {\n            '@uri': 'http://schemas.openxmlformats.org/drawingml/2006/table',\n            'a:tbl': {\n              'a:tblPr': {\n                '@firstRow': '1',\n                '@bandRow': '1',\n                'a:tableStyleId': options.tabstyle // \"{5C22544A-7EE6-4342-B048-85BDC9FD1C3A}\"\n              },\n\n              'a:tblGrid': {\n                '#text': colSpecs\n              },\n              '#text': rowSpecs // replace this with  an array of table row objects\n            }\n          }\n        }\n      }\n    };\n  },\n\n  _getColSpecs: function (rows, options) {\n    var self = this;\n    return rows[0].map(function (val, idx) {\n      return self._tblGrid(idx, options);\n    });\n  },\n  _tblGrid: function (idx, options) {\n    return {\n      'a:gridCol': {\n        '@w': options.columnWidths ? options.columnWidths[idx] : options.columnWidth || '0' // || \"2048000\"\n      }\n    };\n  },\n\n  _getRow: function (cells, options) {\n    return {\n      'a:tr': {\n        '@h': options.rowHeight || '0',\n        // || \"370840\",\n        '#text': cells // populate this with an array of table cell objects\n      }\n    };\n  },\n\n  _getCell: function (val, options, idx, row_idx) {\n    var font_size = options.font_size || 14;\n    var font_face = options.font_face || 'Times New Roman';\n    var cellObject = {\n      'a:tc': {\n        'a:txBody': {\n          'a:bodyPr': {},\n          'a:lstStyle': {},\n          'a:p': {\n            'a:pPr': {\n              '@algn': options.align ? options.align[idx] ? options.align[idx] : options.align : 'ctr'\n            },\n            'a:r': {\n              'a:rPr': {\n                '@lang': 'en-US',\n                '@sz': '' + font_size * 100,\n                '@dirty': '0',\n                '@smtClean': '0',\n                '@b': options.bold ? options.bold[row_idx] ? options.bold[row_idx][idx] ? options.bold[row_idx][idx] : options.bold[row_idx] : options.bold : '0',\n                '@i': options.italics ? options.italics[row_idx] ? options.italics[row_idx][idx] ? options.italics[row_idx][idx] : options.italics[row_idx] : options.italics : '0',\n                'a:latin': {\n                  '@typeface': font_face\n                },\n                'a:cs': {\n                  '@typeface': font_face\n                }\n              },\n              'a:t': val // this is the cell value\n            },\n\n            'a:endParaRPr': {\n              '@lang': 'en-US',\n              '@sz': '' + font_size * 100,\n              '@dirty': '0',\n              'a:latin': {\n                '@typeface': font_face\n              },\n              'a:cs': {\n                '@typeface': font_face\n              }\n            }\n          }\n        },\n        'a:tcPr': {}\n      }\n    };\n    if (options.hasOwnProperty('fill_color')) {\n      // Apply background fill to table cell\n      cellObject['a:tc']['a:tcPr']['a:solidFill'] = {\n        'a:srgbClr': {\n          '@val': options.fill_color\n        }\n      };\n    }\n    if (options.hasOwnProperty('font_color')) {\n      // Apply color to text run\n      cellObject['a:tc']['a:txBody']['a:p']['a:r']['a:rPr']['a:solidFill'] = {\n        'a:srgbClr': {\n          '@val': options.font_color\n        }\n      };\n    }\n    return cellObject;\n  }\n};","map":{"version":3,"names":["EMU","module","exports","getTable","rows","options","tabstyle","columnWidth","undefined","length","self","_getBase","map","row","row_idx","_getRow","val","idx","cellVal","cellOptions","hasOwnProperty","opts","_getCell","_getColSpecs","rowSpecs","colSpecs","x","y","cx","cy","_tblGrid","columnWidths","cells","rowHeight","font_size","font_face","cellObject","align","bold","italics","fill_color","font_color"],"sources":["/Users/abc/Downloads/Workspace/c2i/image-text/c2i-convert/node_modules/officegen/lib/genofficetable.js"],"sourcesContent":["//\n// officegen: tables\n//\n// Please refer to README.md for this module's documentations.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a copy\n// of this software and associated documentation files (the \"Software\"), to deal\n// in the Software without restriction, including without limitation the rights\n// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n// copies of the Software, and to permit persons to whom the Software is\n// furnished to do so, subject to the following conditions:\n//\n// The above copyright notice and this permission notice shall be included in all\n// copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\n// SOFTWARE.\n//\n\nvar EMU = 914400 // OfficeXML measures in English Metric Units\n\nmodule.exports = {\n  // assume passed in an array of row objects\n  getTable: function(rows, options) {\n    options = options || {}\n    options.tabstyle = options.tabstyle\n      ? options.tabstyle\n      : '{5C22544A-7EE6-4342-B048-85BDC9FD1C3A}'\n    if (options.columnWidth === undefined) {\n      options.columnWidth = (8 / rows[0].length) * EMU\n    }\n    var self = this\n\n    return self._getBase(\n      rows.map(function(row, row_idx) {\n        return self._getRow(\n          row.map(function(val, idx) {\n            var cellVal = val\n            var cellOptions = options\n            if (typeof val === 'object') {\n              // Cell-specific formatting passed in, override table options\n              cellOptions = val.hasOwnProperty('opts') ? val.opts : options\n              cellVal = val.hasOwnProperty('val') ? val.val : val\n            }\n\n            return self._getCell(cellVal, cellOptions, idx, row_idx)\n          }),\n          options\n        )\n      }),\n      self._getColSpecs(rows, options),\n      options\n    )\n  },\n\n  _getBase: function(rowSpecs, colSpecs, options) {\n    return {\n      'p:graphicFrame': {\n        'p:nvGraphicFramePr': {\n          'p:cNvPr': {\n            '@id': '6',\n            '@name': 'Table 5'\n          },\n          'p:cNvGraphicFramePr': {\n            'a:graphicFrameLocks': {\n              '@noGrp': '1'\n            }\n          },\n          'p:nvPr': {\n            'p:extLst': {\n              'p:ext': {\n                '@uri': '{D42A27DB-BD31-4B8C-83A1-F6EECF244321}',\n                'p14:modId': {\n                  '@xmlns:p14':\n                    'http://schemas.microsoft.com/office/powerpoint/2010/main',\n                  '@val': '1579011935'\n                }\n              }\n            }\n          }\n        },\n        'p:xfrm': {\n          'a:off': {\n            '@x': options.x || '1524000',\n            '@y': options.y || '1397000'\n          },\n          'a:ext': {\n            '@cx': options.cx || '6096000',\n            '@cy': options.cy || '1483360'\n          }\n        },\n        'a:graphic': {\n          'a:graphicData': {\n            '@uri': 'http://schemas.openxmlformats.org/drawingml/2006/table',\n            'a:tbl': {\n              'a:tblPr': {\n                '@firstRow': '1',\n                '@bandRow': '1',\n                'a:tableStyleId': options.tabstyle // \"{5C22544A-7EE6-4342-B048-85BDC9FD1C3A}\"\n              },\n              'a:tblGrid': {\n                '#text': colSpecs\n              },\n              '#text': rowSpecs // replace this with  an array of table row objects\n            }\n          }\n        }\n      }\n    }\n  },\n\n  _getColSpecs: function(rows, options) {\n    var self = this\n    return rows[0].map(function(val, idx) {\n      return self._tblGrid(idx, options)\n    })\n  },\n\n  _tblGrid: function(idx, options) {\n    return {\n      'a:gridCol': {\n        '@w': options.columnWidths\n          ? options.columnWidths[idx]\n          : options.columnWidth || '0' // || \"2048000\"\n      }\n    }\n  },\n\n  _getRow: function(cells, options) {\n    return {\n      'a:tr': {\n        '@h': options.rowHeight || '0', // || \"370840\",\n        '#text': cells // populate this with an array of table cell objects\n      }\n    }\n  },\n\n  _getCell: function(val, options, idx, row_idx) {\n    var font_size = options.font_size || 14\n    var font_face = options.font_face || 'Times New Roman'\n    var cellObject = {\n      'a:tc': {\n        'a:txBody': {\n          'a:bodyPr': {},\n          'a:lstStyle': {},\n\n          'a:p': {\n            'a:pPr': {\n              '@algn': options.align\n                ? options.align[idx]\n                  ? options.align[idx]\n                  : options.align\n                : 'ctr'\n            },\n            'a:r': {\n              'a:rPr': {\n                '@lang': 'en-US',\n                '@sz': '' + font_size * 100,\n                '@dirty': '0',\n                '@smtClean': '0',\n                '@b': options.bold\n                  ? options.bold[row_idx]\n                    ? options.bold[row_idx][idx]\n                      ? options.bold[row_idx][idx]\n                      : options.bold[row_idx]\n                    : options.bold\n                  : '0',\n                '@i': options.italics\n                  ? options.italics[row_idx]\n                    ? options.italics[row_idx][idx]\n                      ? options.italics[row_idx][idx]\n                      : options.italics[row_idx]\n                    : options.italics\n                  : '0',\n                'a:latin': {\n                  '@typeface': font_face\n                },\n                'a:cs': {\n                  '@typeface': font_face\n                }\n              },\n              'a:t': val // this is the cell value\n            },\n            'a:endParaRPr': {\n              '@lang': 'en-US',\n              '@sz': '' + font_size * 100,\n              '@dirty': '0',\n              'a:latin': {\n                '@typeface': font_face\n              },\n              'a:cs': {\n                '@typeface': font_face\n              }\n            }\n          }\n        },\n        'a:tcPr': {}\n      }\n    }\n\n    if (options.hasOwnProperty('fill_color')) {\n      // Apply background fill to table cell\n      cellObject['a:tc']['a:tcPr']['a:solidFill'] = {\n        'a:srgbClr': {\n          '@val': options.fill_color\n        }\n      }\n    }\n\n    if (options.hasOwnProperty('font_color')) {\n      // Apply color to text run\n      cellObject['a:tc']['a:txBody']['a:p']['a:r']['a:rPr']['a:solidFill'] = {\n        'a:srgbClr': {\n          '@val': options.font_color\n        }\n      }\n    }\n\n    return cellObject\n  }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}