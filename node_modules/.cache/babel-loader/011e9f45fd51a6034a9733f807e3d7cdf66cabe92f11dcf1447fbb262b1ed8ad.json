{"ast":null,"code":"//\n// fast-image-size - Simple stand alone module to just extract the image size from image file without using special image libraries.\n//\n// Please refer to README.md for this module's documentations.\n//\n// NOTE:\n// - Before changing this code please refer to the 'hacking the code section' on README.md.\n//\n// Copyright (c) 2013 Ziv Barber;\n//\n// Permission is hereby granted, free of charge, to any person obtaining\n// a copy of this software and associated documentation files (the\n// 'Software'), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to\n// permit persons to whom the Software is furnished to do so, subject to\n// the following conditions:\n//\n// The above copyright notice and this permission notice shall be\n// included in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n//\n\nvar fast_image_size_info = require('./package.json');\nvar fs = require('fs');\nmodule.exports = exports = function (file_path, callback) {\n  // Internal options:\n  if (file_path == '@version@') {\n    return fast_image_size_info.version;\n  } // Endif.\n\n  function getJpgSize(buffer_data, retInfo) {\n    // Skip 5 chars, they are for signature\n    buffer_data = buffer_data.slice(4);\n    var i, next;\n    while (buffer_data.length) {\n      // read length of the next block\n      i = buffer_data.readUInt16BE(0);\n\n      // 0xFFC0 is baseline(SOF)\n      // 0xFFC2 is progressive(SOF2)\n      next = buffer_data[i + 1];\n      if (next === 0xC0 || next === 0xC2) {\n        return {\n          'height': buffer_data.readUInt16BE(i + 5),\n          'width': buffer_data.readUInt16BE(i + 7)\n        };\n      }\n\n      // move to the next block\n      buffer_data = buffer_data.slice(i + 2);\n    }\n  }\n  function parseHeaderData(buffer_data, callback_data) {\n    var retInfo = {};\n\n    // Detect GIF:\n    if (buffer_data[0] == 0x47 && buffer_data[1] == 0x49 && buffer_data[2] == 0x46) {\n      retInfo.type = 'gif';\n      retInfo.width = buffer_data[7] * 256 + buffer_data[6];\n      retInfo.height = buffer_data[9] * 256 + buffer_data[8];\n\n      // Detect JPEG:\n    } else if (buffer_data[0] == 0xFF && buffer_data[1] == 0xD8 && buffer_data[2] == 0xFF && buffer_data[3] == 0xE0) {\n      retInfo.type = 'jpeg';\n      var size = getJpgSize(buffer_data, retInfo);\n      retInfo.width = size.width;\n      retInfo.height = size.height;\n\n      // Detect PNG:\n    } else if (buffer_data[0] == 137 && buffer_data[1] == 80 && buffer_data[2] == 78 && buffer_data[3] == 71 && buffer_data[4] == 13 && buffer_data[5] == 10 && buffer_data[6] == 26 && buffer_data[7] == 10) {\n      retInfo.type = 'png';\n      if (buffer_data[12] == 0x49 && buffer_data[13] == 0x48 && buffer_data[14] == 0x44 && buffer_data[15] == 0x52) {\n        retInfo.width = buffer_data[16] * 256 * 256 * 256 + buffer_data[17] * 256 * 256 + buffer_data[18] * 256 + buffer_data[19];\n        retInfo.height = buffer_data[20] * 256 * 256 * 256 + buffer_data[21] * 256 * 256 + buffer_data[22] * 256 + buffer_data[23];\n      } // Endif.\n\n      // Detect BMP:\n    } else if (buffer_data[0] == 0x42 && buffer_data[1] == 0x4D) {\n      retInfo.type = 'bmp';\n      retInfo.width = buffer_data[21] * 256 * 256 * 256 + buffer_data[20] * 256 * 256 + buffer_data[19] * 256 + buffer_data[18];\n      retInfo.height = buffer_data[25] * 256 * 256 * 256 + buffer_data[24] * 256 * 256 + buffer_data[23] * 256 + buffer_data[22];\n    } // Endif.\n\n    retInfo.image = file_path;\n    if (!retInfo.type) {\n      retInfo.type = 'unknown';\n    } // Endif.\n\n    if (callback_data) {\n      callback_data(retInfo);\n    } // Endif.\n\n    return retInfo;\n  }\n  ;\n\n  // Async mode:\n  if (callback) {\n    fs.exists(file_path, function (exists) {\n      if (exists) {\n        fs.open(file_path, \"r\", function (error, fd) {\n          var bufferSize = fs.fstatSync(fd).size;\n          var buffer = new Buffer(bufferSize);\n          fs.read(fd, buffer, 0, bufferSize, null, function (error, bytesRead, buffer) {\n            fs.close(fd);\n            parseHeaderData(buffer, callback);\n          });\n        });\n      } else {\n        throw 'Error: Invalid file name.';\n      } // Endif.\n    });\n\n    // Sync mode:\n  } else {\n    var fd = fs.openSync(file_path, \"r\");\n    var bufferSize = fs.fstatSync(fd).size;\n    var buffer = new Buffer(bufferSize);\n    var bytesRead = fs.readSync(fd, buffer, 0, bufferSize, 0);\n    fs.closeSync(fd);\n    return parseHeaderData(buffer, null);\n  } // Endif.\n};","map":{"version":3,"names":["fast_image_size_info","require","fs","module","exports","file_path","callback","version","getJpgSize","buffer_data","retInfo","slice","i","next","length","readUInt16BE","parseHeaderData","callback_data","type","width","height","size","image","exists","open","error","fd","bufferSize","fstatSync","buffer","Buffer","read","bytesRead","close","openSync","readSync","closeSync"],"sources":["/Users/abc/Downloads/Workspace/c2i/image-text/c2i-convert/node_modules/fast-image-size/index.js"],"sourcesContent":["//\r\n// fast-image-size - Simple stand alone module to just extract the image size from image file without using special image libraries.\r\n//\r\n// Please refer to README.md for this module's documentations.\r\n//\r\n// NOTE:\r\n// - Before changing this code please refer to the 'hacking the code section' on README.md.\r\n//\r\n// Copyright (c) 2013 Ziv Barber;\r\n//\r\n// Permission is hereby granted, free of charge, to any person obtaining\r\n// a copy of this software and associated documentation files (the\r\n// 'Software'), to deal in the Software without restriction, including\r\n// without limitation the rights to use, copy, modify, merge, publish,\r\n// distribute, sublicense, and/or sell copies of the Software, and to\r\n// permit persons to whom the Software is furnished to do so, subject to\r\n// the following conditions:\r\n//\r\n// The above copyright notice and this permission notice shall be\r\n// included in all copies or substantial portions of the Software.\r\n//\r\n// THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND,\r\n// EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\r\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\r\n// IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\r\n// CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\r\n// TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\r\n// SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\r\n//\r\n\r\nvar fast_image_size_info = require('./package.json');\r\nvar fs = require('fs');\r\n\r\nmodule.exports = exports = function ( file_path, callback ) {\r\n\t// Internal options:\r\n\tif ( file_path == '@version@' ) {\r\n\t\treturn fast_image_size_info.version;\r\n\t} // Endif.\r\n\r\n\tfunction getJpgSize( buffer_data, retInfo ) {\r\n\t  // Skip 5 chars, they are for signature\r\n\t  buffer_data = buffer_data.slice( 4 );\r\n\r\n\t  var i, next;\r\n\t  while (buffer_data.length) {\r\n\t    // read length of the next block\r\n\t    i = buffer_data.readUInt16BE( 0 );\r\n\r\n\t    // 0xFFC0 is baseline(SOF)\r\n\t    // 0xFFC2 is progressive(SOF2)\r\n\t    next = buffer_data[ i + 1 ];\r\n\t    if (next === 0xC0 || next === 0xC2) {\r\n\t      return {\r\n\t        'height' : buffer_data.readUInt16BE( i + 5 ),\r\n\t        'width' : buffer_data.readUInt16BE( i + 7 )\r\n\t      };\r\n\t    }\r\n\r\n\t    // move to the next block\r\n\t    buffer_data = buffer_data.slice( i + 2 );\r\n\t  }\r\n\t}\r\n\r\n\tfunction parseHeaderData ( buffer_data, callback_data ) {\r\n\t\tvar retInfo = {};\r\n\r\n\t\t// Detect GIF:\r\n\t\tif ( buffer_data[0] == 0x47 && buffer_data[1] == 0x49 && buffer_data[2] == 0x46 ) {\r\n\t\t\tretInfo.type = 'gif';\r\n\t\t\tretInfo.width = (buffer_data[7] * 256) + buffer_data[6];\r\n\t\t\tretInfo.height = (buffer_data[9] * 256) + buffer_data[8];\r\n\r\n\t\t// Detect JPEG:\r\n\t\t} else if ( buffer_data[0] == 0xFF && buffer_data[1] == 0xD8 && buffer_data[2] == 0xFF && buffer_data[3] == 0xE0 ) {\r\n\t\t  retInfo.type = 'jpeg';\r\n\t\t  var size = getJpgSize( buffer_data, retInfo );\r\n\t\t  retInfo.width = size.width;\r\n\t\t  retInfo.height = size.height;\r\n\r\n\t\t// Detect PNG:\r\n\t\t} else if ( buffer_data[0] == 137 && buffer_data[1] == 80 && buffer_data[2] == 78 && buffer_data[3] == 71 && buffer_data[4] == 13 && buffer_data[5] == 10 && buffer_data[6] == 26 && buffer_data[7] == 10 ) {\r\n\t\t\tretInfo.type = 'png';\r\n\r\n\t\t\tif ( buffer_data[12] == 0x49 && buffer_data[13] == 0x48 && buffer_data[14] == 0x44 && buffer_data[15] == 0x52 ) {\r\n\t\t\t\tretInfo.width = (buffer_data[16] * 256 * 256 * 256) + (buffer_data[17] * 256 * 256) + (buffer_data[18] * 256) + buffer_data[19];\r\n\t\t\t\tretInfo.height = (buffer_data[20] * 256 * 256 * 256) + (buffer_data[21] * 256 * 256) + (buffer_data[22] * 256) + buffer_data[23];\r\n\t\t\t} // Endif.\r\n\r\n\t\t// Detect BMP:\r\n\t\t} else if ( buffer_data[0] == 0x42 && buffer_data[1] == 0x4D ) {\r\n\t\t\tretInfo.type = 'bmp';\r\n\t\t\tretInfo.width = (buffer_data[21] * 256 * 256 * 256) + (buffer_data[20] * 256 * 256) + (buffer_data[19] * 256) + buffer_data[18];\r\n\t\t\tretInfo.height = (buffer_data[25] * 256 * 256 * 256) + (buffer_data[24] * 256 * 256) + (buffer_data[23] * 256) + buffer_data[22];\r\n\t\t} // Endif.\r\n\r\n\t\tretInfo.image = file_path;\r\n\t\tif ( !retInfo.type ) {\r\n\t\t\tretInfo.type = 'unknown';\r\n\t\t} // Endif.\r\n\r\n\t\tif ( callback_data ) {\r\n\t\t\tcallback_data ( retInfo );\r\n\t\t} // Endif.\r\n\r\n\t\treturn retInfo;\r\n\t};\r\n\r\n\t// Async mode:\r\n\tif ( callback ) {\r\n\t  fs.exists ( file_path, function( exists ) {\r\n\t    if ( exists ) {\r\n\t      fs.open ( file_path, \"r\", function ( error, fd ) {\r\n\t        var bufferSize = fs.fstatSync( fd ).size;\r\n\t        var buffer = new Buffer( bufferSize );\r\n\t        fs.read ( fd, buffer, 0, bufferSize, null, function ( error, bytesRead, buffer ) {\r\n\t          fs.close ( fd );\r\n\t          parseHeaderData ( buffer, callback );\r\n\t        });\r\n\t      });\r\n\t\t\t} else {\r\n\t\t\t\tthrow 'Error: Invalid file name.';\r\n\t\t\t} // Endif.\r\n\t\t});\r\n\r\n\t// Sync mode:\r\n\t} else {\r\n\t\tvar fd = fs.openSync ( file_path, \"r\" );\r\n\t\tvar bufferSize = fs.fstatSync( fd ).size;\r\n\t\tvar buffer = new Buffer( bufferSize );\r\n\t\tvar bytesRead = fs.readSync ( fd, buffer, 0, bufferSize, 0 );\r\n\t\tfs.closeSync ( fd );\r\n\t\treturn parseHeaderData ( buffer, null );\r\n\t} // Endif.\r\n};\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}