{"ast":null,"code":"var _jsxFileName = \"/Users/abc/Downloads/Workspace/c2i/image-text/c2i-convert/src/App.js\",\n  _s = $RefreshSig$();\nimport logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { createWorker } from \"tesseract.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [ocr, setOcr] = useState(\"\");\n  const [imageData, setImageData] = useState(null);\n  const worker = createWorker({\n    logger: m => {\n      console.log(m);\n    }\n  });\n  const convertImageToText = async () => {\n    if (!imageData) return;\n    await worker.load();\n    await worker.loadLanguage(\"eng\");\n    await worker.initialize(\"eng\");\n    const {\n      data: {\n        text\n      }\n    } = await worker.recognize(imageData);\n    setOcr(text);\n  };\n  useEffect(() => {\n    convertImageToText();\n  }, [imageData]);\n  function handleImageChange(e) {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      const imageDataUri = reader.result;\n      console.log({\n        imageDataUri\n      });\n      setImageData(imageDataUri);\n    };\n    reader.readAsDataURL(file);\n  }\n  // const SampleDocument = () => (\n  //   <Document>\n  //     <Text>Hello World</Text>\n  //   </Document>\n  // )\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Choose an Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        name: \"\",\n        id: \"\",\n        onChange: handleImageChange,\n        accept: \"image/*\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"display-flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: imageData,\n        alt: \"\",\n        srcset: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: ocr\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: () => {\n          // render(<SampleDocument />,  `${__dirname}/example.docx`)\n        },\n        children: \"generate doc\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"XS/7OkSjeSWNT8LMHJaUSiiuRfk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useState","useEffect","createWorker","App","ocr","setOcr","imageData","setImageData","worker","logger","m","console","log","convertImageToText","load","loadLanguage","initialize","data","text","recognize","handleImageChange","e","file","target","files","reader","FileReader","onloadend","imageDataUri","result","readAsDataURL"],"sources":["/Users/abc/Downloads/Workspace/c2i/image-text/c2i-convert/src/App.js"],"sourcesContent":["import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport { useState, useEffect } from \"react\";\nimport { createWorker } from \"tesseract.js\";\nfunction App() {\n  const [ocr, setOcr] = useState(\"\");\n  const [imageData, setImageData] = useState(null);\n  const worker = createWorker({\n    logger: (m) => {\n      console.log(m);\n    },\n  });\n  const convertImageToText = async () => {\n    if (!imageData) return;\n    await worker.load();\n    await worker.loadLanguage(\"eng\");\n    await worker.initialize(\"eng\");\n    const {\n      data: { text },\n    } = await worker.recognize(imageData);\n    setOcr(text);\n  };\n  useEffect(() => {\n    convertImageToText();\n  }, [imageData]);\n\n  function handleImageChange(e) {\n    const file = e.target.files[0];\n    if (!file) return;\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      const imageDataUri = reader.result;\n      console.log({ imageDataUri });\n      setImageData(imageDataUri);\n    };\n    reader.readAsDataURL(file);\n  }\n  // const SampleDocument = () => (\n  //   <Document>\n  //     <Text>Hello World</Text>\n  //   </Document>\n  // )\n\n  return (\n    <div className=\"App\">\n      <div>\n        <p>Choose an Image</p>\n        <input\n          type=\"file\"\n          name=\"\"\n          id=\"\"\n          onChange={handleImageChange}\n          accept=\"image/*\"\n        />\n      </div>\n      <div className=\"display-flex\">\n        <img src={imageData} alt=\"\" srcset=\"\" />\n        <p>{ocr}</p>\n        <div\n          onClick={() => {\n            // render(<SampleDocument />,  `${__dirname}/example.docx`)\n          }}\n        >\n          generate doc\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,YAAY,QAAQ,cAAc;AAAC;AAC5C,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,GAAG,EAAEC,MAAM,CAAC,GAAGL,QAAQ,CAAC,EAAE,CAAC;EAClC,MAAM,CAACM,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAMQ,MAAM,GAAGN,YAAY,CAAC;IAC1BO,MAAM,EAAGC,CAAC,IAAK;MACbC,OAAO,CAACC,GAAG,CAACF,CAAC,CAAC;IAChB;EACF,CAAC,CAAC;EACF,MAAMG,kBAAkB,GAAG,YAAY;IACrC,IAAI,CAACP,SAAS,EAAE;IAChB,MAAME,MAAM,CAACM,IAAI,EAAE;IACnB,MAAMN,MAAM,CAACO,YAAY,CAAC,KAAK,CAAC;IAChC,MAAMP,MAAM,CAACQ,UAAU,CAAC,KAAK,CAAC;IAC9B,MAAM;MACJC,IAAI,EAAE;QAAEC;MAAK;IACf,CAAC,GAAG,MAAMV,MAAM,CAACW,SAAS,CAACb,SAAS,CAAC;IACrCD,MAAM,CAACa,IAAI,CAAC;EACd,CAAC;EACDjB,SAAS,CAAC,MAAM;IACdY,kBAAkB,EAAE;EACtB,CAAC,EAAE,CAACP,SAAS,CAAC,CAAC;EAEf,SAASc,iBAAiB,CAACC,CAAC,EAAE;IAC5B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9B,IAAI,CAACF,IAAI,EAAE;IACX,MAAMG,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/BD,MAAM,CAACE,SAAS,GAAG,MAAM;MACvB,MAAMC,YAAY,GAAGH,MAAM,CAACI,MAAM;MAClClB,OAAO,CAACC,GAAG,CAAC;QAAEgB;MAAa,CAAC,CAAC;MAC7BrB,YAAY,CAACqB,YAAY,CAAC;IAC5B,CAAC;IACDH,MAAM,CAACK,aAAa,CAACR,IAAI,CAAC;EAC5B;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAsB,eACtB;QACE,IAAI,EAAC,MAAM;QACX,IAAI,EAAC,EAAE;QACP,EAAE,EAAC,EAAE;QACL,QAAQ,EAAEF,iBAAkB;QAC5B,MAAM,EAAC;MAAS;QAAA;QAAA;QAAA;MAAA,QAChB;IAAA;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAK,SAAS,EAAC,cAAc;MAAA,wBAC3B;QAAK,GAAG,EAAEd,SAAU;QAAC,GAAG,EAAC,EAAE;QAAC,MAAM,EAAC;MAAE;QAAA;QAAA;QAAA;MAAA,QAAG,eACxC;QAAA,UAAIF;MAAG;QAAA;QAAA;QAAA;MAAA,QAAK,eACZ;QACE,OAAO,EAAE,MAAM;UACb;QAAA,CACA;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGE;IAAA;MAAA;MAAA;MAAA;IAAA,QACF;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAhEQD,GAAG;AAAA,KAAHA,GAAG;AAkEZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}